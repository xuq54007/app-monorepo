{"version":3,"file":"static/js/35119.629be55193.chunk.js","mappings":"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","sources":["webpack://web/../../node_modules/@onekeyfe/coinselect/utils.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/cryptography/intent.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/cryptography/publickey.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/cryptography/signature-scheme.js","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/characterClasses.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/printString.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/jsutils/devAssert.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/jsutils/inspect.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/ast.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/kinds.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/visitor.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/printer.mjs","webpack://web/../../node_modules/@mysten/sui/node_modules/graphql/language/blockString.mjs","webpack://web/../../node_modules/@mysten/sui/dist/esm/graphql/client.js","webpack://web/../../node_modules/@0no-co/graphql.web/dist/graphql.web.mjs","webpack://web/../../node_modules/gql.tada/dist/gql-tada.mjs","webpack://web/../../node_modules/@mysten/sui/dist/esm/graphql/schemas/2024.4/index.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/zklogin/jwt-utils.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/zklogin/bcs.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/zklogin/utils.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/zklogin/publickey.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/zklogin/signature.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/cryptography/signature.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/cryptography/keypair.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/_assert.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/utils.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/hmac.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/pbkdf2.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/_md.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/_u64.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/node_modules/@noble/hashes/esm/sha512.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@scure/bip39/esm/index.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/cryptography/mnemonics.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@noble/hashes/esm/hmac.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@noble/hashes/esm/_md.js","webpack://web/../../node_modules/@mysten/sui/node_modules/@noble/hashes/esm/sha512.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/keypairs/ed25519/ed25519-hd-key.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/keypairs/ed25519/keypair.js","webpack://web/../../node_modules/@mysten/sui/dist/esm/keypairs/ed25519/publickey.js"],"sourcesContent":["// baseline estimates, used to improve performance\nvar TX_EMPTY_SIZE = 4 + 1 + 1 + 4\nvar TX_INPUT_BASE = 32 + 4 + 1 + 4\nvar TX_INPUT_PUBKEYHASH = 107\nvar TX_OUTPUT_BASE = 8 + 1\nvar TX_OUTPUT_PUBKEYHASH = 25\nvar OP_RETURN_OVERHEAD = 1 + 8 + 1\n\nfunction inputBytes (input) {\n  return TX_INPUT_BASE + (input.script ? input.script.length : TX_INPUT_PUBKEYHASH)\n}\n\nfunction outputBytes (output) {\n  if (output.script) {\n    return OP_RETURN_OVERHEAD + output.script.length + (output.script.length >= 74 ? 2 : 1)\n  }\n  return TX_OUTPUT_BASE + (output.script ? output.script.length : TX_OUTPUT_PUBKEYHASH)\n}\n\nfunction dustThreshold (output, feeRate) {\n  /* ... classify the output for input estimate  */\n  return inputBytes({}) * feeRate\n}\n\nfunction transactionBytes (inputs, outputs) {\n  return TX_EMPTY_SIZE +\n    inputs.reduce(function (a, x) { return a + inputBytes(x) }, 0) +\n    outputs.reduce(function (a, x) { return a + outputBytes(x) }, 0)\n}\n\nfunction uintOrNaN (v) {\n  if (typeof v !== 'number') return NaN\n  if (!isFinite(v)) return NaN\n  if (Math.floor(v) !== v) return NaN\n  if (v < 0) return NaN\n  return v\n}\n\nfunction sumForgiving (range) {\n  return range.reduce(function (a, x) { return a + (isFinite(x.value) ? x.value : 0) }, 0)\n}\n\nfunction sumOrNaN (range) {\n  return range.reduce(function (a, x) { return a + uintOrNaN(x.value) }, 0)\n}\n\nvar BLANK_OUTPUT = outputBytes({})\n\nfunction finalize (inputs, outputs, feeRate) {\n  var bytesAccum = transactionBytes(inputs, outputs)\n  var feeAfterExtraOutput = feeRate * (bytesAccum + BLANK_OUTPUT)\n  var remainderAfterExtraOutput = sumOrNaN(inputs) - (sumOrNaN(outputs) + feeAfterExtraOutput)\n\n  // is it worth a change output?\n  if (remainderAfterExtraOutput > dustThreshold({}, feeRate)) {\n    outputs = outputs.concat({ value: remainderAfterExtraOutput })\n  }\n\n  var fee = sumOrNaN(inputs) - sumOrNaN(outputs)\n  if (!isFinite(fee)) return { fee: feeRate * bytesAccum }\n\n  return {\n    inputs: inputs,\n    outputs: outputs,\n    fee: fee\n  }\n}\n\nmodule.exports = {\n  dustThreshold: dustThreshold,\n  finalize: finalize,\n  inputBytes: inputBytes,\n  outputBytes: outputBytes,\n  sumOrNaN: sumOrNaN,\n  sumForgiving: sumForgiving,\n  transactionBytes: transactionBytes,\n  uintOrNaN: uintOrNaN\n}\n","import { bcs } from \"../bcs/index.js\";\nfunction messageWithIntent(scope, message) {\n  return bcs.IntentMessage(bcs.fixedArray(message.length, bcs.u8())).serialize({\n    intent: {\n      scope: { [scope]: true },\n      version: { V0: true },\n      appId: { Sui: true }\n    },\n    value: message\n  }).toBytes();\n}\nexport {\n  messageWithIntent\n};\n//# sourceMappingURL=intent.js.map\n","import { toBase64 } from \"@mysten/bcs\";\nimport { blake2b } from \"@noble/hashes/blake2b\";\nimport { bytesToHex } from \"@noble/hashes/utils\";\nimport { bcs } from \"../bcs/index.js\";\nimport { normalizeSuiAddress, SUI_ADDRESS_LENGTH } from \"../utils/sui-types.js\";\nimport { messageWithIntent } from \"./intent.js\";\nfunction bytesEqual(a, b) {\n  if (a === b) return true;\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nclass PublicKey {\n  /**\n   * Checks if two public keys are equal\n   */\n  equals(publicKey) {\n    return bytesEqual(this.toRawBytes(), publicKey.toRawBytes());\n  }\n  /**\n   * Return the base-64 representation of the public key\n   */\n  toBase64() {\n    return toBase64(this.toRawBytes());\n  }\n  toString() {\n    throw new Error(\n      \"`toString` is not implemented on public keys. Use `toBase64()` or `toRawBytes()` instead.\"\n    );\n  }\n  /**\n   * Return the Sui representation of the public key encoded in\n   * base-64. A Sui public key is formed by the concatenation\n   * of the scheme flag with the raw bytes of the public key\n   */\n  toSuiPublicKey() {\n    const bytes = this.toSuiBytes();\n    return toBase64(bytes);\n  }\n  verifyWithIntent(bytes, signature, intent) {\n    const intentMessage = messageWithIntent(intent, bytes);\n    const digest = blake2b(intentMessage, { dkLen: 32 });\n    return this.verify(digest, signature);\n  }\n  /**\n   * Verifies that the signature is valid for for the provided PersonalMessage\n   */\n  verifyPersonalMessage(message, signature) {\n    return this.verifyWithIntent(\n      bcs.vector(bcs.u8()).serialize(message).toBytes(),\n      signature,\n      \"PersonalMessage\"\n    );\n  }\n  /**\n   * Verifies that the signature is valid for for the provided Transaction\n   */\n  verifyTransaction(transaction, signature) {\n    return this.verifyWithIntent(transaction, signature, \"TransactionData\");\n  }\n  /**\n   * Returns the bytes representation of the public key\n   * prefixed with the signature scheme flag\n   */\n  toSuiBytes() {\n    const rawBytes = this.toRawBytes();\n    const suiBytes = new Uint8Array(rawBytes.length + 1);\n    suiBytes.set([this.flag()]);\n    suiBytes.set(rawBytes, 1);\n    return suiBytes;\n  }\n  /**\n   * Return the Sui address associated with this Ed25519 public key\n   */\n  toSuiAddress() {\n    return normalizeSuiAddress(\n      bytesToHex(blake2b(this.toSuiBytes(), { dkLen: 32 })).slice(0, SUI_ADDRESS_LENGTH * 2)\n    );\n  }\n}\nexport {\n  PublicKey,\n  bytesEqual\n};\n//# sourceMappingURL=publickey.js.map\n","const SIGNATURE_SCHEME_TO_FLAG = {\n  ED25519: 0,\n  Secp256k1: 1,\n  Secp256r1: 2,\n  MultiSig: 3,\n  ZkLogin: 5\n};\nconst SIGNATURE_SCHEME_TO_SIZE = {\n  ED25519: 32,\n  Secp256k1: 33,\n  Secp256r1: 33\n};\nconst SIGNATURE_FLAG_TO_SCHEME = {\n  0: \"ED25519\",\n  1: \"Secp256k1\",\n  2: \"Secp256r1\",\n  3: \"MultiSig\",\n  5: \"ZkLogin\"\n};\nexport {\n  SIGNATURE_FLAG_TO_SCHEME,\n  SIGNATURE_SCHEME_TO_FLAG,\n  SIGNATURE_SCHEME_TO_SIZE\n};\n//# sourceMappingURL=signature-scheme.js.map\n","/**\n * ```\n * WhiteSpace ::\n *   - \"Horizontal Tab (U+0009)\"\n *   - \"Space (U+0020)\"\n * ```\n * @internal\n */\nexport function isWhiteSpace(code) {\n  return code === 0x0009 || code === 0x0020;\n}\n/**\n * ```\n * Digit :: one of\n *   - `0` `1` `2` `3` `4` `5` `6` `7` `8` `9`\n * ```\n * @internal\n */\n\nexport function isDigit(code) {\n  return code >= 0x0030 && code <= 0x0039;\n}\n/**\n * ```\n * Letter :: one of\n *   - `A` `B` `C` `D` `E` `F` `G` `H` `I` `J` `K` `L` `M`\n *   - `N` `O` `P` `Q` `R` `S` `T` `U` `V` `W` `X` `Y` `Z`\n *   - `a` `b` `c` `d` `e` `f` `g` `h` `i` `j` `k` `l` `m`\n *   - `n` `o` `p` `q` `r` `s` `t` `u` `v` `w` `x` `y` `z`\n * ```\n * @internal\n */\n\nexport function isLetter(code) {\n  return (\n    (code >= 0x0061 && code <= 0x007a) || // A-Z\n    (code >= 0x0041 && code <= 0x005a) // a-z\n  );\n}\n/**\n * ```\n * NameStart ::\n *   - Letter\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameStart(code) {\n  return isLetter(code) || code === 0x005f;\n}\n/**\n * ```\n * NameContinue ::\n *   - Letter\n *   - Digit\n *   - `_`\n * ```\n * @internal\n */\n\nexport function isNameContinue(code) {\n  return isLetter(code) || isDigit(code) || code === 0x005f;\n}\n","/**\n * Prints a string as a GraphQL StringValue literal. Replaces control characters\n * and excluded characters (\" U+0022 and \\\\ U+005C) with escape sequences.\n */\nexport function printString(str) {\n  return `\"${str.replace(escapedRegExp, escapedReplacer)}\"`;\n} // eslint-disable-next-line no-control-regex\n\nconst escapedRegExp = /[\\x00-\\x1f\\x22\\x5c\\x7f-\\x9f]/g;\n\nfunction escapedReplacer(str) {\n  return escapeSequences[str.charCodeAt(0)];\n} // prettier-ignore\n\nconst escapeSequences = [\n  '\\\\u0000',\n  '\\\\u0001',\n  '\\\\u0002',\n  '\\\\u0003',\n  '\\\\u0004',\n  '\\\\u0005',\n  '\\\\u0006',\n  '\\\\u0007',\n  '\\\\b',\n  '\\\\t',\n  '\\\\n',\n  '\\\\u000B',\n  '\\\\f',\n  '\\\\r',\n  '\\\\u000E',\n  '\\\\u000F',\n  '\\\\u0010',\n  '\\\\u0011',\n  '\\\\u0012',\n  '\\\\u0013',\n  '\\\\u0014',\n  '\\\\u0015',\n  '\\\\u0016',\n  '\\\\u0017',\n  '\\\\u0018',\n  '\\\\u0019',\n  '\\\\u001A',\n  '\\\\u001B',\n  '\\\\u001C',\n  '\\\\u001D',\n  '\\\\u001E',\n  '\\\\u001F',\n  '',\n  '',\n  '\\\\\"',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 2F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 3F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 4F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\\\\\',\n  '',\n  '',\n  '', // 5F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '', // 6F\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '',\n  '\\\\u007F',\n  '\\\\u0080',\n  '\\\\u0081',\n  '\\\\u0082',\n  '\\\\u0083',\n  '\\\\u0084',\n  '\\\\u0085',\n  '\\\\u0086',\n  '\\\\u0087',\n  '\\\\u0088',\n  '\\\\u0089',\n  '\\\\u008A',\n  '\\\\u008B',\n  '\\\\u008C',\n  '\\\\u008D',\n  '\\\\u008E',\n  '\\\\u008F',\n  '\\\\u0090',\n  '\\\\u0091',\n  '\\\\u0092',\n  '\\\\u0093',\n  '\\\\u0094',\n  '\\\\u0095',\n  '\\\\u0096',\n  '\\\\u0097',\n  '\\\\u0098',\n  '\\\\u0099',\n  '\\\\u009A',\n  '\\\\u009B',\n  '\\\\u009C',\n  '\\\\u009D',\n  '\\\\u009E',\n  '\\\\u009F',\n];\n","export function devAssert(condition, message) {\n  const booleanCondition = Boolean(condition);\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n","const MAX_ARRAY_LENGTH = 10;\nconst MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (typeof value) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? `[function ${value.name}]` : '[function]';\n\n    case 'object':\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (value === null) {\n    return 'null';\n  }\n\n  if (previouslySeenValues.includes(value)) {\n    return '[Circular]';\n  }\n\n  const seenValues = [...previouslySeenValues, value];\n\n  if (isJSONable(value)) {\n    const jsonValue = value.toJSON(); // check for infinite recursion\n\n    if (jsonValue !== value) {\n      return typeof jsonValue === 'string'\n        ? jsonValue\n        : formatValue(jsonValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction isJSONable(value) {\n  return typeof value.toJSON === 'function';\n}\n\nfunction formatObject(object, seenValues) {\n  const entries = Object.entries(object);\n\n  if (entries.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  const properties = entries.map(\n    ([key, value]) => key + ': ' + formatValue(value, seenValues),\n  );\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  const len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  const remaining = array.length - len;\n  const items = [];\n\n  for (let i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(`... ${remaining} more items`);\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getObjectTag(object) {\n  const tag = Object.prototype.toString\n    .call(object)\n    .replace(/^\\[object /, '')\n    .replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    const name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n","/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport class Location {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  constructor(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Location';\n  }\n\n  toJSON() {\n    return {\n      start: this.start,\n      end: this.end,\n    };\n  }\n}\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport class Token {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   *\n   * Note: is undefined for punctuation tokens, but typed as string for\n   * convenience in the parser.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  constructor(kind, start, end, line, column, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column; // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\n    this.value = value;\n    this.prev = null;\n    this.next = null;\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'Token';\n  }\n\n  toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column,\n    };\n  }\n}\n/**\n * The list of all possible AST node types.\n */\n\n/**\n * @internal\n */\nexport const QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: [\n    'name',\n    'variableDefinitions',\n    'directives',\n    'selectionSet',\n  ],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: [\n    'name', // Note: fragment variable definitions are deprecated and will removed in v17.0.0\n    'variableDefinitions',\n    'typeCondition',\n    'directives',\n    'selectionSet',\n  ],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: [\n    'description',\n    'name',\n    'type',\n    'defaultValue',\n    'directives',\n  ],\n  InterfaceTypeDefinition: [\n    'description',\n    'name',\n    'interfaces',\n    'directives',\n    'fields',\n  ],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields'],\n};\nconst kindValues = new Set(Object.keys(QueryDocumentKeys));\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  const maybeKind =\n    maybeNode === null || maybeNode === void 0 ? void 0 : maybeNode.kind;\n  return typeof maybeKind === 'string' && kindValues.has(maybeKind);\n}\n/** Name */\n\nvar OperationTypeNode;\n\n(function (OperationTypeNode) {\n  OperationTypeNode['QUERY'] = 'query';\n  OperationTypeNode['MUTATION'] = 'mutation';\n  OperationTypeNode['SUBSCRIPTION'] = 'subscription';\n})(OperationTypeNode || (OperationTypeNode = {}));\n\nexport { OperationTypeNode };\n","/**\n * The set of allowed kind values for AST nodes.\n */\nvar Kind;\n\n(function (Kind) {\n  Kind['NAME'] = 'Name';\n  Kind['DOCUMENT'] = 'Document';\n  Kind['OPERATION_DEFINITION'] = 'OperationDefinition';\n  Kind['VARIABLE_DEFINITION'] = 'VariableDefinition';\n  Kind['SELECTION_SET'] = 'SelectionSet';\n  Kind['FIELD'] = 'Field';\n  Kind['ARGUMENT'] = 'Argument';\n  Kind['FRAGMENT_SPREAD'] = 'FragmentSpread';\n  Kind['INLINE_FRAGMENT'] = 'InlineFragment';\n  Kind['FRAGMENT_DEFINITION'] = 'FragmentDefinition';\n  Kind['VARIABLE'] = 'Variable';\n  Kind['INT'] = 'IntValue';\n  Kind['FLOAT'] = 'FloatValue';\n  Kind['STRING'] = 'StringValue';\n  Kind['BOOLEAN'] = 'BooleanValue';\n  Kind['NULL'] = 'NullValue';\n  Kind['ENUM'] = 'EnumValue';\n  Kind['LIST'] = 'ListValue';\n  Kind['OBJECT'] = 'ObjectValue';\n  Kind['OBJECT_FIELD'] = 'ObjectField';\n  Kind['DIRECTIVE'] = 'Directive';\n  Kind['NAMED_TYPE'] = 'NamedType';\n  Kind['LIST_TYPE'] = 'ListType';\n  Kind['NON_NULL_TYPE'] = 'NonNullType';\n  Kind['SCHEMA_DEFINITION'] = 'SchemaDefinition';\n  Kind['OPERATION_TYPE_DEFINITION'] = 'OperationTypeDefinition';\n  Kind['SCALAR_TYPE_DEFINITION'] = 'ScalarTypeDefinition';\n  Kind['OBJECT_TYPE_DEFINITION'] = 'ObjectTypeDefinition';\n  Kind['FIELD_DEFINITION'] = 'FieldDefinition';\n  Kind['INPUT_VALUE_DEFINITION'] = 'InputValueDefinition';\n  Kind['INTERFACE_TYPE_DEFINITION'] = 'InterfaceTypeDefinition';\n  Kind['UNION_TYPE_DEFINITION'] = 'UnionTypeDefinition';\n  Kind['ENUM_TYPE_DEFINITION'] = 'EnumTypeDefinition';\n  Kind['ENUM_VALUE_DEFINITION'] = 'EnumValueDefinition';\n  Kind['INPUT_OBJECT_TYPE_DEFINITION'] = 'InputObjectTypeDefinition';\n  Kind['DIRECTIVE_DEFINITION'] = 'DirectiveDefinition';\n  Kind['SCHEMA_EXTENSION'] = 'SchemaExtension';\n  Kind['SCALAR_TYPE_EXTENSION'] = 'ScalarTypeExtension';\n  Kind['OBJECT_TYPE_EXTENSION'] = 'ObjectTypeExtension';\n  Kind['INTERFACE_TYPE_EXTENSION'] = 'InterfaceTypeExtension';\n  Kind['UNION_TYPE_EXTENSION'] = 'UnionTypeExtension';\n  Kind['ENUM_TYPE_EXTENSION'] = 'EnumTypeExtension';\n  Kind['INPUT_OBJECT_TYPE_EXTENSION'] = 'InputObjectTypeExtension';\n})(Kind || (Kind = {}));\n\nexport { Kind };\n/**\n * The enum type representing the possible kind values of AST nodes.\n *\n * @deprecated Please use `Kind`. Will be remove in v17.\n */\n","import { devAssert } from '../jsutils/devAssert.mjs';\nimport { inspect } from '../jsutils/inspect.mjs';\nimport { isNode, QueryDocumentKeys } from './ast.mjs';\nimport { Kind } from './kinds.mjs';\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport const BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n * ```ts\n * const editedAST = visit(ast, {\n *   enter(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: skip visiting this node\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   },\n *   leave(node, key, parent, path, ancestors) {\n *     // @return\n *     //   undefined: no action\n *     //   false: no action\n *     //   visitor.BREAK: stop visiting altogether\n *     //   null: delete this node\n *     //   any value: replace this node with the returned value\n *   }\n * });\n * ```\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to three permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind(node) {\n *     // enter the \"Kind\" node\n *   }\n * })\n * ```\n *\n * 2) Named visitors that trigger upon entering and leaving a node of a specific kind.\n *\n * ```ts\n * visit(ast, {\n *   Kind: {\n *     enter(node) {\n *       // enter the \"Kind\" node\n *     }\n *     leave(node) {\n *       // leave the \"Kind\" node\n *     }\n *   }\n * })\n * ```\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n * ```ts\n * visit(ast, {\n *   enter(node) {\n *     // enter any node\n *   },\n *   leave(node) {\n *     // leave any node\n *   }\n * })\n * ```\n */\n\nexport function visit(root, visitor, visitorKeys = QueryDocumentKeys) {\n  const enterLeaveMap = new Map();\n\n  for (const kind of Object.values(Kind)) {\n    enterLeaveMap.set(kind, getEnterLeaveForKind(visitor, kind));\n  }\n  /* eslint-disable no-undef-init */\n\n  let stack = undefined;\n  let inArray = Array.isArray(root);\n  let keys = [root];\n  let index = -1;\n  let edits = [];\n  let node = root;\n  let key = undefined;\n  let parent = undefined;\n  const path = [];\n  const ancestors = [];\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    const isLeaving = index === keys.length;\n    const isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n          let editOffset = 0;\n\n          for (const [editKey, editValue] of edits) {\n            const arrayKey = editKey - editOffset;\n\n            if (editValue === null) {\n              node.splice(arrayKey, 1);\n              editOffset++;\n            } else {\n              node[arrayKey] = editValue;\n            }\n          }\n        } else {\n          node = Object.defineProperties(\n            {},\n            Object.getOwnPropertyDescriptors(node),\n          );\n\n          for (const [editKey, editValue] of edits) {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else if (parent) {\n      key = inArray ? index : keys[index];\n      node = parent[key];\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      path.push(key);\n    }\n\n    let result;\n\n    if (!Array.isArray(node)) {\n      var _enterLeaveMap$get, _enterLeaveMap$get2;\n\n      isNode(node) || devAssert(false, `Invalid AST Node: ${inspect(node)}.`);\n      const visitFn = isLeaving\n        ? (_enterLeaveMap$get = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get === void 0\n          ? void 0\n          : _enterLeaveMap$get.leave\n        : (_enterLeaveMap$get2 = enterLeaveMap.get(node.kind)) === null ||\n          _enterLeaveMap$get2 === void 0\n        ? void 0\n        : _enterLeaveMap$get2.enter;\n      result =\n        visitFn === null || visitFn === void 0\n          ? void 0\n          : visitFn.call(visitor, node, key, parent, path, ancestors);\n\n      if (result === BREAK) {\n        break;\n      }\n\n      if (result === false) {\n        if (!isLeaving) {\n          path.pop();\n          continue;\n        }\n      } else if (result !== undefined) {\n        edits.push([key, result]);\n\n        if (!isLeaving) {\n          if (isNode(result)) {\n            node = result;\n          } else {\n            path.pop();\n            continue;\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _node$kind;\n\n      stack = {\n        inArray,\n        index,\n        keys,\n        edits,\n        prev: stack,\n      };\n      inArray = Array.isArray(node);\n      keys = inArray\n        ? node\n        : (_node$kind = visitorKeys[node.kind]) !== null &&\n          _node$kind !== void 0\n        ? _node$kind\n        : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    // New root\n    return edits[edits.length - 1][1];\n  }\n\n  return root;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  const skipping = new Array(visitors.length).fill(null);\n  const mergedVisitor = Object.create(null);\n\n  for (const kind of Object.values(Kind)) {\n    let hasVisitor = false;\n    const enterList = new Array(visitors.length).fill(undefined);\n    const leaveList = new Array(visitors.length).fill(undefined);\n\n    for (let i = 0; i < visitors.length; ++i) {\n      const { enter, leave } = getEnterLeaveForKind(visitors[i], kind);\n      hasVisitor || (hasVisitor = enter != null || leave != null);\n      enterList[i] = enter;\n      leaveList[i] = leave;\n    }\n\n    if (!hasVisitor) {\n      continue;\n    }\n\n    const mergedEnterLeave = {\n      enter(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _enterList$i;\n\n            const result =\n              (_enterList$i = enterList[i]) === null || _enterList$i === void 0\n                ? void 0\n                : _enterList$i.apply(visitors[i], args);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      },\n\n      leave(...args) {\n        const node = args[0];\n\n        for (let i = 0; i < visitors.length; i++) {\n          if (skipping[i] === null) {\n            var _leaveList$i;\n\n            const result =\n              (_leaveList$i = leaveList[i]) === null || _leaveList$i === void 0\n                ? void 0\n                : _leaveList$i.apply(visitors[i], args);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          } else if (skipping[i] === node) {\n            skipping[i] = null;\n          }\n        }\n      },\n    };\n    mergedVisitor[kind] = mergedEnterLeave;\n  }\n\n  return mergedVisitor;\n}\n/**\n * Given a visitor instance and a node kind, return EnterLeaveVisitor for that kind.\n */\n\nexport function getEnterLeaveForKind(visitor, kind) {\n  const kindVisitor = visitor[kind];\n\n  if (typeof kindVisitor === 'object') {\n    // { Kind: { enter() {}, leave() {} } }\n    return kindVisitor;\n  } else if (typeof kindVisitor === 'function') {\n    // { Kind() {} }\n    return {\n      enter: kindVisitor,\n      leave: undefined,\n    };\n  } // { enter() {}, leave() {} }\n\n  return {\n    enter: visitor.enter,\n    leave: visitor.leave,\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n *\n * @deprecated Please use `getEnterLeaveForKind` instead. Will be removed in v17\n */\n\n/* c8 ignore next 8 */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  const { enter, leave } = getEnterLeaveForKind(visitor, kind);\n  return isLeaving ? leave : enter;\n}\n","import { printBlockString } from './blockString.mjs';\nimport { printString } from './printString.mjs';\nimport { visit } from './visitor.mjs';\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, printDocASTReducer);\n}\nconst MAX_LINE_LENGTH = 80;\nconst printDocASTReducer = {\n  Name: {\n    leave: (node) => node.value,\n  },\n  Variable: {\n    leave: (node) => '$' + node.name,\n  },\n  // Document\n  Document: {\n    leave: (node) => join(node.definitions, '\\n\\n'),\n  },\n  OperationDefinition: {\n    leave(node) {\n      const varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n      const prefix = join(\n        [\n          node.operation,\n          join([node.name, varDefs]),\n          join(node.directives, ' '),\n        ],\n        ' ',\n      ); // Anonymous queries with no directives or variable definitions can use\n      // the query short form.\n\n      return (prefix === 'query' ? '' : prefix + ' ') + node.selectionSet;\n    },\n  },\n  VariableDefinition: {\n    leave: ({ variable, type, defaultValue, directives }) =>\n      variable +\n      ': ' +\n      type +\n      wrap(' = ', defaultValue) +\n      wrap(' ', join(directives, ' ')),\n  },\n  SelectionSet: {\n    leave: ({ selections }) => block(selections),\n  },\n  Field: {\n    leave({ alias, name, arguments: args, directives, selectionSet }) {\n      const prefix = wrap('', alias, ': ') + name;\n      let argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n      if (argsLine.length > MAX_LINE_LENGTH) {\n        argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n      }\n\n      return join([argsLine, join(directives, ' '), selectionSet], ' ');\n    },\n  },\n  Argument: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Fragments\n  FragmentSpread: {\n    leave: ({ name, directives }) =>\n      '...' + name + wrap(' ', join(directives, ' ')),\n  },\n  InlineFragment: {\n    leave: ({ typeCondition, directives, selectionSet }) =>\n      join(\n        [\n          '...',\n          wrap('on ', typeCondition),\n          join(directives, ' '),\n          selectionSet,\n        ],\n        ' ',\n      ),\n  },\n  FragmentDefinition: {\n    leave: (\n      { name, typeCondition, variableDefinitions, directives, selectionSet }, // Note: fragment variable definitions are experimental and may be changed\n    ) =>\n      // or removed in the future.\n      `fragment ${name}${wrap('(', join(variableDefinitions, ', '), ')')} ` +\n      `on ${typeCondition} ${wrap('', join(directives, ' '), ' ')}` +\n      selectionSet,\n  },\n  // Value\n  IntValue: {\n    leave: ({ value }) => value,\n  },\n  FloatValue: {\n    leave: ({ value }) => value,\n  },\n  StringValue: {\n    leave: ({ value, block: isBlockString }) =>\n      isBlockString ? printBlockString(value) : printString(value),\n  },\n  BooleanValue: {\n    leave: ({ value }) => (value ? 'true' : 'false'),\n  },\n  NullValue: {\n    leave: () => 'null',\n  },\n  EnumValue: {\n    leave: ({ value }) => value,\n  },\n  ListValue: {\n    leave: ({ values }) => '[' + join(values, ', ') + ']',\n  },\n  ObjectValue: {\n    leave: ({ fields }) => '{' + join(fields, ', ') + '}',\n  },\n  ObjectField: {\n    leave: ({ name, value }) => name + ': ' + value,\n  },\n  // Directive\n  Directive: {\n    leave: ({ name, arguments: args }) =>\n      '@' + name + wrap('(', join(args, ', '), ')'),\n  },\n  // Type\n  NamedType: {\n    leave: ({ name }) => name,\n  },\n  ListType: {\n    leave: ({ type }) => '[' + type + ']',\n  },\n  NonNullType: {\n    leave: ({ type }) => type + '!',\n  },\n  // Type System Definitions\n  SchemaDefinition: {\n    leave: ({ description, directives, operationTypes }) =>\n      wrap('', description, '\\n') +\n      join(['schema', join(directives, ' '), block(operationTypes)], ' '),\n  },\n  OperationTypeDefinition: {\n    leave: ({ operation, type }) => operation + ': ' + type,\n  },\n  ScalarTypeDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') +\n      join(['scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  FieldDefinition: {\n    leave: ({ description, name, arguments: args, type, directives }) =>\n      wrap('', description, '\\n') +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      ': ' +\n      type +\n      wrap(' ', join(directives, ' ')),\n  },\n  InputValueDefinition: {\n    leave: ({ description, name, type, defaultValue, directives }) =>\n      wrap('', description, '\\n') +\n      join(\n        [name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')],\n        ' ',\n      ),\n  },\n  InterfaceTypeDefinition: {\n    leave: ({ description, name, interfaces, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(\n        [\n          'interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeDefinition: {\n    leave: ({ description, name, directives, types }) =>\n      wrap('', description, '\\n') +\n      join(\n        ['union', name, join(directives, ' '), wrap('= ', join(types, ' | '))],\n        ' ',\n      ),\n  },\n  EnumTypeDefinition: {\n    leave: ({ description, name, directives, values }) =>\n      wrap('', description, '\\n') +\n      join(['enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  EnumValueDefinition: {\n    leave: ({ description, name, directives }) =>\n      wrap('', description, '\\n') + join([name, join(directives, ' ')], ' '),\n  },\n  InputObjectTypeDefinition: {\n    leave: ({ description, name, directives, fields }) =>\n      wrap('', description, '\\n') +\n      join(['input', name, join(directives, ' '), block(fields)], ' '),\n  },\n  DirectiveDefinition: {\n    leave: ({ description, name, arguments: args, repeatable, locations }) =>\n      wrap('', description, '\\n') +\n      'directive @' +\n      name +\n      (hasMultilineItems(args)\n        ? wrap('(\\n', indent(join(args, '\\n')), '\\n)')\n        : wrap('(', join(args, ', '), ')')) +\n      (repeatable ? ' repeatable' : '') +\n      ' on ' +\n      join(locations, ' | '),\n  },\n  SchemaExtension: {\n    leave: ({ directives, operationTypes }) =>\n      join(\n        ['extend schema', join(directives, ' '), block(operationTypes)],\n        ' ',\n      ),\n  },\n  ScalarTypeExtension: {\n    leave: ({ name, directives }) =>\n      join(['extend scalar', name, join(directives, ' ')], ' '),\n  },\n  ObjectTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend type',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  InterfaceTypeExtension: {\n    leave: ({ name, interfaces, directives, fields }) =>\n      join(\n        [\n          'extend interface',\n          name,\n          wrap('implements ', join(interfaces, ' & ')),\n          join(directives, ' '),\n          block(fields),\n        ],\n        ' ',\n      ),\n  },\n  UnionTypeExtension: {\n    leave: ({ name, directives, types }) =>\n      join(\n        [\n          'extend union',\n          name,\n          join(directives, ' '),\n          wrap('= ', join(types, ' | ')),\n        ],\n        ' ',\n      ),\n  },\n  EnumTypeExtension: {\n    leave: ({ name, directives, values }) =>\n      join(['extend enum', name, join(directives, ' '), block(values)], ' '),\n  },\n  InputObjectTypeExtension: {\n    leave: ({ name, directives, fields }) =>\n      join(['extend input', name, join(directives, ' '), block(fields)], ' '),\n  },\n};\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\nfunction join(maybeArray, separator = '') {\n  var _maybeArray$filter$jo;\n\n  return (_maybeArray$filter$jo =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.filter((x) => x).join(separator)) !== null &&\n    _maybeArray$filter$jo !== void 0\n    ? _maybeArray$filter$jo\n    : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an indented `{ }` block.\n */\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\nfunction wrap(start, maybeString, end = '') {\n  return maybeString != null && maybeString !== ''\n    ? start + maybeString + end\n    : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction hasMultilineItems(maybeArray) {\n  var _maybeArray$some;\n\n  // FIXME: https://github.com/graphql/graphql-js/issues/2203\n\n  /* c8 ignore next */\n  return (_maybeArray$some =\n    maybeArray === null || maybeArray === void 0\n      ? void 0\n      : maybeArray.some((str) => str.includes('\\n'))) !== null &&\n    _maybeArray$some !== void 0\n    ? _maybeArray$some\n    : false;\n}\n","import { isWhiteSpace } from './characterClasses.mjs';\n/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\n\nexport function dedentBlockStringLines(lines) {\n  var _firstNonEmptyLine2;\n\n  let commonIndent = Number.MAX_SAFE_INTEGER;\n  let firstNonEmptyLine = null;\n  let lastNonEmptyLine = -1;\n\n  for (let i = 0; i < lines.length; ++i) {\n    var _firstNonEmptyLine;\n\n    const line = lines[i];\n    const indent = leadingWhitespace(line);\n\n    if (indent === line.length) {\n      continue; // skip empty lines\n    }\n\n    firstNonEmptyLine =\n      (_firstNonEmptyLine = firstNonEmptyLine) !== null &&\n      _firstNonEmptyLine !== void 0\n        ? _firstNonEmptyLine\n        : i;\n    lastNonEmptyLine = i;\n\n    if (i !== 0 && indent < commonIndent) {\n      commonIndent = indent;\n    }\n  }\n\n  return lines // Remove common indentation from all lines but first.\n    .map((line, i) => (i === 0 ? line : line.slice(commonIndent))) // Remove leading and trailing blank lines.\n    .slice(\n      (_firstNonEmptyLine2 = firstNonEmptyLine) !== null &&\n        _firstNonEmptyLine2 !== void 0\n        ? _firstNonEmptyLine2\n        : 0,\n      lastNonEmptyLine + 1,\n    );\n}\n\nfunction leadingWhitespace(str) {\n  let i = 0;\n\n  while (i < str.length && isWhiteSpace(str.charCodeAt(i))) {\n    ++i;\n  }\n\n  return i;\n}\n/**\n * @internal\n */\n\nexport function isPrintableAsBlockString(value) {\n  if (value === '') {\n    return true; // empty string is printable\n  }\n\n  let isEmptyLine = true;\n  let hasIndent = false;\n  let hasCommonIndent = true;\n  let seenNonEmptyLine = false;\n\n  for (let i = 0; i < value.length; ++i) {\n    switch (value.codePointAt(i)) {\n      case 0x0000:\n      case 0x0001:\n      case 0x0002:\n      case 0x0003:\n      case 0x0004:\n      case 0x0005:\n      case 0x0006:\n      case 0x0007:\n      case 0x0008:\n      case 0x000b:\n      case 0x000c:\n      case 0x000e:\n      case 0x000f:\n        return false;\n      // Has non-printable characters\n\n      case 0x000d:\n        //  \\r\n        return false;\n      // Has \\r or \\r\\n which will be replaced as \\n\n\n      case 10:\n        //  \\n\n        if (isEmptyLine && !seenNonEmptyLine) {\n          return false; // Has leading new line\n        }\n\n        seenNonEmptyLine = true;\n        isEmptyLine = true;\n        hasIndent = false;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        hasIndent || (hasIndent = isEmptyLine);\n        break;\n\n      default:\n        hasCommonIndent && (hasCommonIndent = hasIndent);\n        isEmptyLine = false;\n    }\n  }\n\n  if (isEmptyLine) {\n    return false; // Has trailing empty lines\n  }\n\n  if (hasCommonIndent && seenNonEmptyLine) {\n    return false; // Has internal indent\n  }\n\n  return true;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value, options) {\n  const escapedValue = value.replace(/\"\"\"/g, '\\\\\"\"\"'); // Expand a block string's raw value into independent lines.\n\n  const lines = escapedValue.split(/\\r\\n|[\\n\\r]/g);\n  const isSingleLine = lines.length === 1; // If common indentation is found we can fix some of those cases by adding leading new line\n\n  const forceLeadingNewLine =\n    lines.length > 1 &&\n    lines\n      .slice(1)\n      .every((line) => line.length === 0 || isWhiteSpace(line.charCodeAt(0))); // Trailing triple quotes just looks confusing but doesn't force trailing new line\n\n  const hasTrailingTripleQuotes = escapedValue.endsWith('\\\\\"\"\"'); // Trailing quote (single or double) or slash forces trailing new line\n\n  const hasTrailingQuote = value.endsWith('\"') && !hasTrailingTripleQuotes;\n  const hasTrailingSlash = value.endsWith('\\\\');\n  const forceTrailingNewline = hasTrailingQuote || hasTrailingSlash;\n  const printAsMultipleLines =\n    !(options !== null && options !== void 0 && options.minimize) && // add leading and trailing new lines only if it improves readability\n    (!isSingleLine ||\n      value.length > 70 ||\n      forceTrailingNewline ||\n      forceLeadingNewLine ||\n      hasTrailingTripleQuotes);\n  let result = ''; // Format a multi-line block quote to account for leading space.\n\n  const skipLeadingNewLine = isSingleLine && isWhiteSpace(value.charCodeAt(0));\n\n  if ((printAsMultipleLines && !skipLeadingNewLine) || forceLeadingNewLine) {\n    result += '\\n';\n  }\n\n  result += escapedValue;\n\n  if (printAsMultipleLines || forceTrailingNewline) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result + '\"\"\"';\n}\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _url, _queries, _headers, _fetch;\nimport { print } from \"graphql\";\nclass SuiGraphQLRequestError extends Error {\n}\nclass SuiGraphQLClient {\n  constructor({\n    url,\n    fetch: fetchFn = fetch,\n    headers = {},\n    queries = {}\n  }) {\n    __privateAdd(this, _url);\n    __privateAdd(this, _queries);\n    __privateAdd(this, _headers);\n    __privateAdd(this, _fetch);\n    __privateSet(this, _url, url);\n    __privateSet(this, _queries, queries);\n    __privateSet(this, _headers, headers);\n    __privateSet(this, _fetch, (...args) => fetchFn(...args));\n  }\n  async query(options) {\n    const res = await __privateGet(this, _fetch).call(this, __privateGet(this, _url), {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...__privateGet(this, _headers)\n      },\n      body: JSON.stringify({\n        query: typeof options.query === \"string\" ? String(options.query) : print(options.query),\n        variables: options.variables,\n        extensions: options.extensions,\n        operationName: options.operationName\n      })\n    });\n    if (!res.ok) {\n      throw new SuiGraphQLRequestError(`GraphQL request failed: ${res.statusText} (${res.status})`);\n    }\n    return await res.json();\n  }\n  async execute(query, options) {\n    return this.query({\n      ...options,\n      query: __privateGet(this, _queries)[query]\n    });\n  }\n}\n_url = new WeakMap();\n_queries = new WeakMap();\n_headers = new WeakMap();\n_fetch = new WeakMap();\nexport {\n  SuiGraphQLClient,\n  SuiGraphQLRequestError\n};\n//# sourceMappingURL=client.js.map\n","var e = {\n  NAME: \"Name\",\n  DOCUMENT: \"Document\",\n  OPERATION_DEFINITION: \"OperationDefinition\",\n  VARIABLE_DEFINITION: \"VariableDefinition\",\n  SELECTION_SET: \"SelectionSet\",\n  FIELD: \"Field\",\n  ARGUMENT: \"Argument\",\n  FRAGMENT_SPREAD: \"FragmentSpread\",\n  INLINE_FRAGMENT: \"InlineFragment\",\n  FRAGMENT_DEFINITION: \"FragmentDefinition\",\n  VARIABLE: \"Variable\",\n  INT: \"IntValue\",\n  FLOAT: \"FloatValue\",\n  STRING: \"StringValue\",\n  BOOLEAN: \"BooleanValue\",\n  NULL: \"NullValue\",\n  ENUM: \"EnumValue\",\n  LIST: \"ListValue\",\n  OBJECT: \"ObjectValue\",\n  OBJECT_FIELD: \"ObjectField\",\n  DIRECTIVE: \"Directive\",\n  NAMED_TYPE: \"NamedType\",\n  LIST_TYPE: \"ListType\",\n  NON_NULL_TYPE: \"NonNullType\"\n};\n\nvar r = {\n  QUERY: \"query\",\n  MUTATION: \"mutation\",\n  SUBSCRIPTION: \"subscription\"\n};\n\nclass GraphQLError extends Error {\n  constructor(e, r, i, n, a, t, l) {\n    super(e);\n    this.name = \"GraphQLError\";\n    this.message = e;\n    if (a) {\n      this.path = a;\n    }\n    if (r) {\n      this.nodes = Array.isArray(r) ? r : [ r ];\n    }\n    if (i) {\n      this.source = i;\n    }\n    if (n) {\n      this.positions = n;\n    }\n    if (t) {\n      this.originalError = t;\n    }\n    var o = l;\n    if (!o && t) {\n      var u = t.extensions;\n      if (u && \"object\" == typeof u) {\n        o = u;\n      }\n    }\n    this.extensions = o || {};\n  }\n  toJSON() {\n    return {\n      ...this,\n      message: this.message\n    };\n  }\n  toString() {\n    return this.message;\n  }\n  get [Symbol.toStringTag]() {\n    return \"GraphQLError\";\n  }\n}\n\nvar i;\n\nvar n;\n\nfunction error(e) {\n  return new GraphQLError(`Syntax Error: Unexpected token at ${n} in ${e}`);\n}\n\nfunction advance(e) {\n  e.lastIndex = n;\n  if (e.test(i)) {\n    return i.slice(n, n = e.lastIndex);\n  }\n}\n\nvar a = / +(?=[^\\s])/y;\n\nfunction blockString(e) {\n  var r = e.split(\"\\n\");\n  var i = \"\";\n  var n = 0;\n  var t = 0;\n  var l = r.length - 1;\n  for (var o = 0; o < r.length; o++) {\n    a.lastIndex = 0;\n    if (a.test(r[o])) {\n      if (o && (!n || a.lastIndex < n)) {\n        n = a.lastIndex;\n      }\n      t = t || o;\n      l = o;\n    }\n  }\n  for (var u = t; u <= l; u++) {\n    if (u !== t) {\n      i += \"\\n\";\n    }\n    i += r[u].slice(n).replace(/\\\\\"\"\"/g, '\"\"\"');\n  }\n  return i;\n}\n\nfunction ignored() {\n  for (var e = 0 | i.charCodeAt(n++); 9 === e || 10 === e || 13 === e || 32 === e || 35 === e || 44 === e || 65279 === e; e = 0 | i.charCodeAt(n++)) {\n    if (35 === e) {\n      while (10 !== (e = i.charCodeAt(n++)) && 13 !== e) {}\n    }\n  }\n  n--;\n}\n\nvar t = /[_A-Za-z]\\w*/y;\n\nvar l = new RegExp(\"(?:(null|true|false)|\\\\$(\" + t.source + ')|(-?\\\\d+)((?:\\\\.\\\\d+)?[eE][+-]?\\\\d+|\\\\.\\\\d+)?|(\"\"\"(?:\"\"\"|(?:[\\\\s\\\\S]*?[^\\\\\\\\])\"\"\"))|(\"(?:\"|[^\\\\r\\\\n]*?[^\\\\\\\\]\"))|(' + t.source + \"))\", \"y\");\n\nvar o = function(e) {\n  e[e.Const = 1] = \"Const\";\n  e[e.Var = 2] = \"Var\";\n  e[e.Int = 3] = \"Int\";\n  e[e.Float = 4] = \"Float\";\n  e[e.BlockString = 5] = \"BlockString\";\n  e[e.String = 6] = \"String\";\n  e[e.Enum = 7] = \"Enum\";\n  return e;\n}(o || {});\n\nvar u = /\\\\/;\n\nfunction value(e) {\n  var r;\n  var a;\n  l.lastIndex = n;\n  if (91 === i.charCodeAt(n)) {\n    n++;\n    ignored();\n    var d = [];\n    while (93 !== i.charCodeAt(n)) {\n      d.push(value(e));\n    }\n    n++;\n    ignored();\n    return {\n      kind: \"ListValue\",\n      values: d\n    };\n  } else if (123 === i.charCodeAt(n)) {\n    n++;\n    ignored();\n    var v = [];\n    while (125 !== i.charCodeAt(n)) {\n      if (null == (r = advance(t))) {\n        throw error(\"ObjectField\");\n      }\n      ignored();\n      if (58 !== i.charCodeAt(n++)) {\n        throw error(\"ObjectField\");\n      }\n      ignored();\n      v.push({\n        kind: \"ObjectField\",\n        name: {\n          kind: \"Name\",\n          value: r\n        },\n        value: value(e)\n      });\n    }\n    n++;\n    ignored();\n    return {\n      kind: \"ObjectValue\",\n      fields: v\n    };\n  } else if (null != (a = l.exec(i))) {\n    n = l.lastIndex;\n    ignored();\n    if (null != (r = a[o.Const])) {\n      return \"null\" === r ? {\n        kind: \"NullValue\"\n      } : {\n        kind: \"BooleanValue\",\n        value: \"true\" === r\n      };\n    } else if (null != (r = a[o.Var])) {\n      if (e) {\n        throw error(\"Variable\");\n      } else {\n        return {\n          kind: \"Variable\",\n          name: {\n            kind: \"Name\",\n            value: r\n          }\n        };\n      }\n    } else if (null != (r = a[o.Int])) {\n      var s;\n      if (null != (s = a[o.Float])) {\n        return {\n          kind: \"FloatValue\",\n          value: r + s\n        };\n      } else {\n        return {\n          kind: \"IntValue\",\n          value: r\n        };\n      }\n    } else if (null != (r = a[o.BlockString])) {\n      return {\n        kind: \"StringValue\",\n        value: blockString(r.slice(3, -3)),\n        block: !0\n      };\n    } else if (null != (r = a[o.String])) {\n      return {\n        kind: \"StringValue\",\n        value: u.test(r) ? JSON.parse(r) : r.slice(1, -1),\n        block: !1\n      };\n    } else if (null != (r = a[o.Enum])) {\n      return {\n        kind: \"EnumValue\",\n        value: r\n      };\n    }\n  }\n  throw error(\"Value\");\n}\n\nfunction arguments_(e) {\n  if (40 === i.charCodeAt(n)) {\n    var r = [];\n    n++;\n    ignored();\n    var a;\n    do {\n      if (null == (a = advance(t))) {\n        throw error(\"Argument\");\n      }\n      ignored();\n      if (58 !== i.charCodeAt(n++)) {\n        throw error(\"Argument\");\n      }\n      ignored();\n      r.push({\n        kind: \"Argument\",\n        name: {\n          kind: \"Name\",\n          value: a\n        },\n        value: value(e)\n      });\n    } while (41 !== i.charCodeAt(n));\n    n++;\n    ignored();\n    return r;\n  }\n}\n\nfunction directives(e) {\n  if (64 === i.charCodeAt(n)) {\n    var r = [];\n    var a;\n    do {\n      n++;\n      if (null == (a = advance(t))) {\n        throw error(\"Directive\");\n      }\n      ignored();\n      r.push({\n        kind: \"Directive\",\n        name: {\n          kind: \"Name\",\n          value: a\n        },\n        arguments: arguments_(e)\n      });\n    } while (64 === i.charCodeAt(n));\n    return r;\n  }\n}\n\nfunction type() {\n  var e;\n  var r = 0;\n  while (91 === i.charCodeAt(n)) {\n    r++;\n    n++;\n    ignored();\n  }\n  if (null == (e = advance(t))) {\n    throw error(\"NamedType\");\n  }\n  ignored();\n  var a = {\n    kind: \"NamedType\",\n    name: {\n      kind: \"Name\",\n      value: e\n    }\n  };\n  do {\n    if (33 === i.charCodeAt(n)) {\n      n++;\n      ignored();\n      a = {\n        kind: \"NonNullType\",\n        type: a\n      };\n    }\n    if (r) {\n      if (93 !== i.charCodeAt(n++)) {\n        throw error(\"NamedType\");\n      }\n      ignored();\n      a = {\n        kind: \"ListType\",\n        type: a\n      };\n    }\n  } while (r--);\n  return a;\n}\n\nvar d = new RegExp(\"(?:(\\\\.{3})|(\" + t.source + \"))\", \"y\");\n\nvar v = function(e) {\n  e[e.Spread = 1] = \"Spread\";\n  e[e.Name = 2] = \"Name\";\n  return e;\n}(v || {});\n\nfunction selectionSet() {\n  var e = [];\n  var r;\n  var a;\n  do {\n    d.lastIndex = n;\n    if (null != (a = d.exec(i))) {\n      n = d.lastIndex;\n      if (null != a[v.Spread]) {\n        ignored();\n        var l = advance(t);\n        if (null != l && \"on\" !== l) {\n          ignored();\n          e.push({\n            kind: \"FragmentSpread\",\n            name: {\n              kind: \"Name\",\n              value: l\n            },\n            directives: directives(!1)\n          });\n        } else {\n          ignored();\n          if (\"on\" === l) {\n            if (null == (l = advance(t))) {\n              throw error(\"NamedType\");\n            }\n            ignored();\n          }\n          var o = directives(!1);\n          if (123 !== i.charCodeAt(n++)) {\n            throw error(\"InlineFragment\");\n          }\n          ignored();\n          e.push({\n            kind: \"InlineFragment\",\n            typeCondition: l ? {\n              kind: \"NamedType\",\n              name: {\n                kind: \"Name\",\n                value: l\n              }\n            } : void 0,\n            directives: o,\n            selectionSet: selectionSet()\n          });\n        }\n      } else if (null != (r = a[v.Name])) {\n        var u = void 0;\n        ignored();\n        if (58 === i.charCodeAt(n)) {\n          n++;\n          ignored();\n          u = r;\n          if (null == (r = advance(t))) {\n            throw error(\"Field\");\n          }\n          ignored();\n        }\n        var s = arguments_(!1);\n        ignored();\n        var c = directives(!1);\n        var f = void 0;\n        if (123 === i.charCodeAt(n)) {\n          n++;\n          ignored();\n          f = selectionSet();\n        }\n        e.push({\n          kind: \"Field\",\n          alias: u ? {\n            kind: \"Name\",\n            value: u\n          } : void 0,\n          name: {\n            kind: \"Name\",\n            value: r\n          },\n          arguments: s,\n          directives: c,\n          selectionSet: f\n        });\n      }\n    } else {\n      throw error(\"SelectionSet\");\n    }\n  } while (125 !== i.charCodeAt(n));\n  n++;\n  ignored();\n  return {\n    kind: \"SelectionSet\",\n    selections: e\n  };\n}\n\nfunction fragmentDefinition() {\n  var e;\n  var r;\n  if (null == (e = advance(t))) {\n    throw error(\"FragmentDefinition\");\n  }\n  ignored();\n  if (\"on\" !== advance(t)) {\n    throw error(\"FragmentDefinition\");\n  }\n  ignored();\n  if (null == (r = advance(t))) {\n    throw error(\"FragmentDefinition\");\n  }\n  ignored();\n  var a = directives(!1);\n  if (123 !== i.charCodeAt(n++)) {\n    throw error(\"FragmentDefinition\");\n  }\n  ignored();\n  return {\n    kind: \"FragmentDefinition\",\n    name: {\n      kind: \"Name\",\n      value: e\n    },\n    typeCondition: {\n      kind: \"NamedType\",\n      name: {\n        kind: \"Name\",\n        value: r\n      }\n    },\n    directives: a,\n    selectionSet: selectionSet()\n  };\n}\n\nvar s = /(?:query|mutation|subscription|fragment)/y;\n\nfunction operationDefinition(e) {\n  var r;\n  var a;\n  var l;\n  if (e) {\n    ignored();\n    r = advance(t);\n    a = function variableDefinitions() {\n      ignored();\n      if (40 === i.charCodeAt(n)) {\n        var e = [];\n        n++;\n        ignored();\n        var r;\n        do {\n          if (36 !== i.charCodeAt(n++)) {\n            throw error(\"Variable\");\n          }\n          if (null == (r = advance(t))) {\n            throw error(\"Variable\");\n          }\n          ignored();\n          if (58 !== i.charCodeAt(n++)) {\n            throw error(\"VariableDefinition\");\n          }\n          ignored();\n          var a = type();\n          var l = void 0;\n          if (61 === i.charCodeAt(n)) {\n            n++;\n            ignored();\n            l = value(!0);\n          }\n          ignored();\n          e.push({\n            kind: \"VariableDefinition\",\n            variable: {\n              kind: \"Variable\",\n              name: {\n                kind: \"Name\",\n                value: r\n              }\n            },\n            type: a,\n            defaultValue: l,\n            directives: directives(!0)\n          });\n        } while (41 !== i.charCodeAt(n));\n        n++;\n        ignored();\n        return e;\n      }\n    }();\n    l = directives(!1);\n  }\n  if (123 === i.charCodeAt(n)) {\n    n++;\n    ignored();\n    return {\n      kind: \"OperationDefinition\",\n      operation: e || \"query\",\n      name: r ? {\n        kind: \"Name\",\n        value: r\n      } : void 0,\n      variableDefinitions: a,\n      directives: l,\n      selectionSet: selectionSet()\n    };\n  }\n}\n\nfunction parse(e, r) {\n  i = \"string\" == typeof e.body ? e.body : e;\n  n = 0;\n  return function document() {\n    var e;\n    var r;\n    ignored();\n    var a = [];\n    do {\n      if (\"fragment\" === (e = advance(s))) {\n        ignored();\n        a.push(fragmentDefinition());\n      } else if (null != (r = operationDefinition(e))) {\n        a.push(r);\n      } else {\n        throw error(\"Document\");\n      }\n    } while (n < i.length);\n    return {\n      kind: \"Document\",\n      definitions: a\n    };\n  }();\n}\n\nfunction parseValue(e, r) {\n  i = \"string\" == typeof e.body ? e.body : e;\n  n = 0;\n  ignored();\n  return value(!1);\n}\n\nfunction parseType(e, r) {\n  i = \"string\" == typeof e.body ? e.body : e;\n  n = 0;\n  return type();\n}\n\nvar c = {};\n\nfunction visit(e, r) {\n  var i = [];\n  var n = [];\n  try {\n    var a = function traverse(e, a, t) {\n      var l = !1;\n      var o = r[e.kind] && r[e.kind].enter || r[e.kind] || r.enter;\n      var u = o && o.call(r, e, a, t, n, i);\n      if (!1 === u) {\n        return e;\n      } else if (null === u) {\n        return null;\n      } else if (u === c) {\n        throw c;\n      } else if (u && \"string\" == typeof u.kind) {\n        l = u !== e;\n        e = u;\n      }\n      if (t) {\n        i.push(t);\n      }\n      var d;\n      var v = {\n        ...e\n      };\n      for (var s in e) {\n        n.push(s);\n        var f = e[s];\n        if (Array.isArray(f)) {\n          var g = [];\n          for (var m = 0; m < f.length; m++) {\n            if (null != f[m] && \"string\" == typeof f[m].kind) {\n              i.push(e);\n              n.push(m);\n              d = traverse(f[m], m, f);\n              n.pop();\n              i.pop();\n              if (null == d) {\n                l = !0;\n              } else {\n                l = l || d !== f[m];\n                g.push(d);\n              }\n            }\n          }\n          f = g;\n        } else if (null != f && \"string\" == typeof f.kind) {\n          if (void 0 !== (d = traverse(f, s, e))) {\n            l = l || f !== d;\n            f = d;\n          }\n        }\n        n.pop();\n        if (l) {\n          v[s] = f;\n        }\n      }\n      if (t) {\n        i.pop();\n      }\n      var p = r[e.kind] && r[e.kind].leave || r.leave;\n      var h = p && p.call(r, e, a, t, n, i);\n      if (h === c) {\n        throw c;\n      } else if (void 0 !== h) {\n        return h;\n      } else if (void 0 !== u) {\n        return l ? v : u;\n      } else {\n        return l ? v : e;\n      }\n    }(e);\n    return void 0 !== a && !1 !== a ? a : e;\n  } catch (r) {\n    if (r !== c) {\n      throw r;\n    }\n    return e;\n  }\n}\n\nfunction mapJoin(e, r, i) {\n  var n = \"\";\n  for (var a = 0; a < e.length; a++) {\n    if (a) {\n      n += r;\n    }\n    n += i(e[a]);\n  }\n  return n;\n}\n\nfunction printString(e) {\n  return JSON.stringify(e);\n}\n\nfunction printBlockString(e) {\n  return '\"\"\"\\n' + e.replace(/\"\"\"/g, '\\\\\"\"\"') + '\\n\"\"\"';\n}\n\nvar f = \"\\n\";\n\nvar g = {\n  OperationDefinition(e) {\n    var r = e.operation;\n    if (e.name) {\n      r += \" \" + e.name.value;\n    }\n    if (e.variableDefinitions && e.variableDefinitions.length) {\n      if (!e.name) {\n        r += \" \";\n      }\n      r += \"(\" + mapJoin(e.variableDefinitions, \", \", g.VariableDefinition) + \")\";\n    }\n    if (e.directives && e.directives.length) {\n      r += \" \" + mapJoin(e.directives, \" \", g.Directive);\n    }\n    return \"query\" !== r ? r + \" \" + g.SelectionSet(e.selectionSet) : g.SelectionSet(e.selectionSet);\n  },\n  VariableDefinition(e) {\n    var r = g.Variable(e.variable) + \": \" + _print(e.type);\n    if (e.defaultValue) {\n      r += \" = \" + _print(e.defaultValue);\n    }\n    if (e.directives && e.directives.length) {\n      r += \" \" + mapJoin(e.directives, \" \", g.Directive);\n    }\n    return r;\n  },\n  Field(e) {\n    var r = e.alias ? e.alias.value + \": \" + e.name.value : e.name.value;\n    if (e.arguments && e.arguments.length) {\n      var i = mapJoin(e.arguments, \", \", g.Argument);\n      if (r.length + i.length + 2 > 80) {\n        r += \"(\" + (f += \"  \") + mapJoin(e.arguments, f, g.Argument) + (f = f.slice(0, -2)) + \")\";\n      } else {\n        r += \"(\" + i + \")\";\n      }\n    }\n    if (e.directives && e.directives.length) {\n      r += \" \" + mapJoin(e.directives, \" \", g.Directive);\n    }\n    if (e.selectionSet) {\n      r += \" \" + g.SelectionSet(e.selectionSet);\n    }\n    return r;\n  },\n  StringValue(e) {\n    if (e.block) {\n      return printBlockString(e.value).replace(/\\n/g, f);\n    } else {\n      return printString(e.value);\n    }\n  },\n  BooleanValue: e => \"\" + e.value,\n  NullValue: e => \"null\",\n  IntValue: e => e.value,\n  FloatValue: e => e.value,\n  EnumValue: e => e.value,\n  Name: e => e.value,\n  Variable: e => \"$\" + e.name.value,\n  ListValue: e => \"[\" + mapJoin(e.values, \", \", _print) + \"]\",\n  ObjectValue: e => \"{\" + mapJoin(e.fields, \", \", g.ObjectField) + \"}\",\n  ObjectField: e => e.name.value + \": \" + _print(e.value),\n  Document(e) {\n    if (!e.definitions || !e.definitions.length) {\n      return \"\";\n    }\n    return mapJoin(e.definitions, \"\\n\\n\", _print);\n  },\n  SelectionSet: e => \"{\" + (f += \"  \") + mapJoin(e.selections, f, _print) + (f = f.slice(0, -2)) + \"}\",\n  Argument: e => e.name.value + \": \" + _print(e.value),\n  FragmentSpread(e) {\n    var r = \"...\" + e.name.value;\n    if (e.directives && e.directives.length) {\n      r += \" \" + mapJoin(e.directives, \" \", g.Directive);\n    }\n    return r;\n  },\n  InlineFragment(e) {\n    var r = \"...\";\n    if (e.typeCondition) {\n      r += \" on \" + e.typeCondition.name.value;\n    }\n    if (e.directives && e.directives.length) {\n      r += \" \" + mapJoin(e.directives, \" \", g.Directive);\n    }\n    return r += \" \" + g.SelectionSet(e.selectionSet);\n  },\n  FragmentDefinition(e) {\n    var r = \"fragment \" + e.name.value;\n    r += \" on \" + e.typeCondition.name.value;\n    if (e.directives && e.directives.length) {\n      r += \" \" + mapJoin(e.directives, \" \", g.Directive);\n    }\n    return r + \" \" + g.SelectionSet(e.selectionSet);\n  },\n  Directive(e) {\n    var r = \"@\" + e.name.value;\n    if (e.arguments && e.arguments.length) {\n      r += \"(\" + mapJoin(e.arguments, \", \", g.Argument) + \")\";\n    }\n    return r;\n  },\n  NamedType: e => e.name.value,\n  ListType: e => \"[\" + _print(e.type) + \"]\",\n  NonNullType: e => _print(e.type) + \"!\"\n};\n\nvar _print = e => g[e.kind](e);\n\nfunction print(e) {\n  f = \"\\n\";\n  return g[e.kind] ? g[e.kind](e) : \"\";\n}\n\nfunction valueFromASTUntyped(e, r) {\n  switch (e.kind) {\n   case \"NullValue\":\n    return null;\n\n   case \"IntValue\":\n    return parseInt(e.value, 10);\n\n   case \"FloatValue\":\n    return parseFloat(e.value);\n\n   case \"StringValue\":\n   case \"EnumValue\":\n   case \"BooleanValue\":\n    return e.value;\n\n   case \"ListValue\":\n    var i = [];\n    for (var n = 0, a = e.values.length; n < a; n++) {\n      i.push(valueFromASTUntyped(e.values[n], r));\n    }\n    return i;\n\n   case \"ObjectValue\":\n    var t = Object.create(null);\n    for (var l = 0, o = e.fields.length; l < o; l++) {\n      var u = e.fields[l];\n      t[u.name.value] = valueFromASTUntyped(u.value, r);\n    }\n    return t;\n\n   case \"Variable\":\n    return r && r[e.name.value];\n  }\n}\n\nfunction valueFromTypeNode(e, r, i) {\n  if (\"Variable\" === e.kind) {\n    return i ? valueFromTypeNode(i[e.name.value], r, i) : void 0;\n  } else if (\"NonNullType\" === r.kind) {\n    return \"NullValue\" !== e.kind ? valueFromTypeNode(e, r, i) : void 0;\n  } else if (\"NullValue\" === e.kind) {\n    return null;\n  } else if (\"ListType\" === r.kind) {\n    if (\"ListValue\" === e.kind) {\n      var n = [];\n      for (var a = 0, t = e.values.length; a < t; a++) {\n        var l = valueFromTypeNode(e.values[a], r.type, i);\n        if (void 0 === l) {\n          return;\n        } else {\n          n.push(l);\n        }\n      }\n      return n;\n    }\n  } else if (\"NamedType\" === r.kind) {\n    switch (r.name.value) {\n     case \"Int\":\n     case \"Float\":\n     case \"String\":\n     case \"Bool\":\n      return r.name.value + \"Value\" === e.kind ? valueFromASTUntyped(e, i) : void 0;\n\n     default:\n      return valueFromASTUntyped(e, i);\n    }\n  }\n}\n\nexport { c as BREAK, GraphQLError, e as Kind, r as OperationTypeNode, parse, parseType, parseValue, print, printBlockString, printString, valueFromASTUntyped, valueFromTypeNode, visit };\n//# sourceMappingURL=graphql.web.mjs.map\n","import { Kind as r, parse as n } from \"@0no-co/graphql.web\";\n\nvar a = 0;\n\nvar e = new Set;\n\nfunction initGraphQLTada() {\n  function graphql(t, i) {\n    var o = n(t).definitions;\n    var s = new Set;\n    for (var f of i || []) {\n      for (var u of f.definitions) {\n        if (u.kind === r.FRAGMENT_DEFINITION && !s.has(u)) {\n          o.push(u);\n          s.add(u);\n        }\n      }\n    }\n    var d;\n    if ((d = o[0].kind === r.FRAGMENT_DEFINITION) && o[0].directives) {\n      o[0].directives = o[0].directives.filter((r => \"_unmask\" !== r.name.value));\n    }\n    var c;\n    return {\n      kind: r.DOCUMENT,\n      definitions: o,\n      get loc() {\n        if (!c && d) {\n          var r = t + function concatLocSources(r) {\n            try {\n              a++;\n              var n = \"\";\n              for (var t of r) {\n                if (!e.has(t)) {\n                  e.add(t);\n                  var {loc: i} = t;\n                  if (i) {\n                    n += i.source.body;\n                  }\n                }\n              }\n              return n;\n            } finally {\n              if (0 == --a) {\n                e.clear();\n              }\n            }\n          }(i || []);\n          return {\n            start: 0,\n            end: r.length,\n            source: {\n              body: r,\n              name: \"GraphQLTada\",\n              locationOffset: {\n                line: 1,\n                column: 1\n              }\n            }\n          };\n        }\n        return c;\n      },\n      set loc(r) {\n        c = r;\n      }\n    };\n  }\n  graphql.scalar = function scalar(r, n) {\n    return n;\n  };\n  graphql.persisted = function persisted(n, a) {\n    return {\n      kind: r.DOCUMENT,\n      definitions: a ? a.definitions : [],\n      documentId: n\n    };\n  };\n  return graphql;\n}\n\nfunction parse(r) {\n  return n(r);\n}\n\nfunction readFragment(...r) {\n  return 2 === r.length ? r[1] : r[0];\n}\n\nfunction maskFragments(r, n) {\n  return n;\n}\n\nfunction unsafe_readResult(r, n) {\n  return n;\n}\n\nvar t = initGraphQLTada();\n\nexport { t as graphql, initGraphQLTada, maskFragments, parse, readFragment, unsafe_readResult };\n//# sourceMappingURL=gql-tada.mjs.map\n","import { initGraphQLTada } from \"gql.tada\";\nexport * from \"../../types.js\";\nimport { readFragment, maskFragments } from \"gql.tada\";\nconst graphql = initGraphQLTada();\nexport {\n  graphql,\n  maskFragments,\n  readFragment\n};\n//# sourceMappingURL=index.js.map\n","function base64UrlCharTo6Bits(base64UrlChar) {\n  if (base64UrlChar.length !== 1) {\n    throw new Error(\"Invalid base64Url character: \" + base64UrlChar);\n  }\n  const base64UrlCharacterSet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_\";\n  const index = base64UrlCharacterSet.indexOf(base64UrlChar);\n  if (index === -1) {\n    throw new Error(\"Invalid base64Url character: \" + base64UrlChar);\n  }\n  const binaryString = index.toString(2).padStart(6, \"0\");\n  const bits = Array.from(binaryString).map(Number);\n  return bits;\n}\nfunction base64UrlStringToBitVector(base64UrlString) {\n  let bitVector = [];\n  for (let i = 0; i < base64UrlString.length; i++) {\n    const base64UrlChar = base64UrlString.charAt(i);\n    const bits = base64UrlCharTo6Bits(base64UrlChar);\n    bitVector = bitVector.concat(bits);\n  }\n  return bitVector;\n}\nfunction decodeBase64URL(s, i) {\n  if (s.length < 2) {\n    throw new Error(`Input (s = ${s}) is not tightly packed because s.length < 2`);\n  }\n  let bits = base64UrlStringToBitVector(s);\n  const firstCharOffset = i % 4;\n  if (firstCharOffset === 0) {\n  } else if (firstCharOffset === 1) {\n    bits = bits.slice(2);\n  } else if (firstCharOffset === 2) {\n    bits = bits.slice(4);\n  } else {\n    throw new Error(`Input (s = ${s}) is not tightly packed because i%4 = 3 (i = ${i}))`);\n  }\n  const lastCharOffset = (i + s.length - 1) % 4;\n  if (lastCharOffset === 3) {\n  } else if (lastCharOffset === 2) {\n    bits = bits.slice(0, bits.length - 2);\n  } else if (lastCharOffset === 1) {\n    bits = bits.slice(0, bits.length - 4);\n  } else {\n    throw new Error(\n      `Input (s = ${s}) is not tightly packed because (i + s.length - 1)%4 = 0 (i = ${i}))`\n    );\n  }\n  if (bits.length % 8 !== 0) {\n    throw new Error(`We should never reach here...`);\n  }\n  const bytes = new Uint8Array(Math.floor(bits.length / 8));\n  let currentByteIndex = 0;\n  for (let i2 = 0; i2 < bits.length; i2 += 8) {\n    const bitChunk = bits.slice(i2, i2 + 8);\n    const byte = parseInt(bitChunk.join(\"\"), 2);\n    bytes[currentByteIndex++] = byte;\n  }\n  return new TextDecoder().decode(bytes);\n}\nfunction verifyExtendedClaim(claim) {\n  if (!(claim.slice(-1) === \"}\" || claim.slice(-1) === \",\")) {\n    throw new Error(\"Invalid claim\");\n  }\n  const json = JSON.parse(\"{\" + claim.slice(0, -1) + \"}\");\n  if (Object.keys(json).length !== 1) {\n    throw new Error(\"Invalid claim\");\n  }\n  const key = Object.keys(json)[0];\n  return [key, json[key]];\n}\nfunction extractClaimValue(claim, claimName) {\n  const extendedClaim = decodeBase64URL(claim.value, claim.indexMod4);\n  const [name, value] = verifyExtendedClaim(extendedClaim);\n  if (name !== claimName) {\n    throw new Error(`Invalid field name: found ${name} expected ${claimName}`);\n  }\n  return value;\n}\nexport {\n  extractClaimValue\n};\n//# sourceMappingURL=jwt-utils.js.map\n","import { bcs } from \"@mysten/bcs\";\nconst zkLoginSignature = bcs.struct(\"ZkLoginSignature\", {\n  inputs: bcs.struct(\"ZkLoginSignatureInputs\", {\n    proofPoints: bcs.struct(\"ZkLoginSignatureInputsProofPoints\", {\n      a: bcs.vector(bcs.string()),\n      b: bcs.vector(bcs.vector(bcs.string())),\n      c: bcs.vector(bcs.string())\n    }),\n    issBase64Details: bcs.struct(\"ZkLoginSignatureInputsClaim\", {\n      value: bcs.string(),\n      indexMod4: bcs.u8()\n    }),\n    headerBase64: bcs.string(),\n    addressSeed: bcs.string()\n  }),\n  maxEpoch: bcs.u64(),\n  userSignature: bcs.vector(bcs.u8())\n});\nexport {\n  zkLoginSignature\n};\n//# sourceMappingURL=bcs.js.map\n","import { hexToBytes } from \"@noble/hashes/utils\";\nfunction findFirstNonZeroIndex(bytes) {\n  for (let i = 0; i < bytes.length; i++) {\n    if (bytes[i] !== 0) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction toPaddedBigEndianBytes(num, width) {\n  const hex = num.toString(16);\n  return hexToBytes(hex.padStart(width * 2, \"0\").slice(-width * 2));\n}\nfunction toBigEndianBytes(num, width) {\n  const bytes = toPaddedBigEndianBytes(num, width);\n  const firstNonZeroIndex = findFirstNonZeroIndex(bytes);\n  if (firstNonZeroIndex === -1) {\n    return new Uint8Array([0]);\n  }\n  return bytes.slice(firstNonZeroIndex);\n}\nexport {\n  toBigEndianBytes,\n  toPaddedBigEndianBytes\n};\n//# sourceMappingURL=utils.js.map\n","var __typeError = (msg) => {\n  throw TypeError(msg);\n};\nvar __accessCheck = (obj, member, msg) => member.has(obj) || __typeError(\"Cannot \" + msg);\nvar __privateGet = (obj, member, getter) => (__accessCheck(obj, member, \"read from private field\"), getter ? getter.call(obj) : member.get(obj));\nvar __privateAdd = (obj, member, value) => member.has(obj) ? __typeError(\"Cannot add the same private member more than once\") : member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\nvar __privateSet = (obj, member, value, setter) => (__accessCheck(obj, member, \"write to private field\"), setter ? setter.call(obj, value) : member.set(obj, value), value);\nvar _data, _client;\nimport { fromBase64, toBase64 } from \"@mysten/bcs\";\nimport { PublicKey } from \"../cryptography/publickey.js\";\nimport { SIGNATURE_SCHEME_TO_FLAG } from \"../cryptography/signature-scheme.js\";\nimport { SuiGraphQLClient } from \"../graphql/client.js\";\nimport { graphql } from \"../graphql/schemas/2024.4/index.js\";\nimport { extractClaimValue } from \"./jwt-utils.js\";\nimport { parseZkLoginSignature } from \"./signature.js\";\nimport { toPaddedBigEndianBytes } from \"./utils.js\";\nconst _ZkLoginPublicIdentifier = class _ZkLoginPublicIdentifier extends PublicKey {\n  /**\n   * Create a new ZkLoginPublicIdentifier object\n   * @param value zkLogin public identifier as buffer or base-64 encoded string\n   */\n  constructor(value, { client } = {}) {\n    super();\n    __privateAdd(this, _data);\n    __privateAdd(this, _client);\n    __privateSet(this, _client, client);\n    if (typeof value === \"string\") {\n      __privateSet(this, _data, fromBase64(value));\n    } else if (value instanceof Uint8Array) {\n      __privateSet(this, _data, value);\n    } else {\n      __privateSet(this, _data, Uint8Array.from(value));\n    }\n  }\n  /**\n   * Checks if two zkLogin public identifiers are equal\n   */\n  equals(publicKey) {\n    return super.equals(publicKey);\n  }\n  /**\n   * Return the byte array representation of the zkLogin public identifier\n   */\n  toRawBytes() {\n    return __privateGet(this, _data);\n  }\n  /**\n   * Return the Sui address associated with this ZkLogin public identifier\n   */\n  flag() {\n    return SIGNATURE_SCHEME_TO_FLAG[\"ZkLogin\"];\n  }\n  /**\n   * Verifies that the signature is valid for for the provided message\n   */\n  async verify(_message, _signature) {\n    throw Error(\"does not support\");\n  }\n  /**\n   * Verifies that the signature is valid for for the provided PersonalMessage\n   */\n  verifyPersonalMessage(message, signature) {\n    const parsedSignature = parseSerializedZkLoginSignature(signature);\n    const address = new _ZkLoginPublicIdentifier(parsedSignature.publicKey).toSuiAddress();\n    return graphqlVerifyZkLoginSignature({\n      address,\n      bytes: toBase64(message),\n      signature: parsedSignature.serializedSignature,\n      intentScope: \"PERSONAL_MESSAGE\",\n      client: __privateGet(this, _client)\n    });\n  }\n  /**\n   * Verifies that the signature is valid for for the provided Transaction\n   */\n  verifyTransaction(transaction, signature) {\n    const parsedSignature = parseSerializedZkLoginSignature(signature);\n    const address = new _ZkLoginPublicIdentifier(parsedSignature.publicKey).toSuiAddress();\n    return graphqlVerifyZkLoginSignature({\n      address,\n      bytes: toBase64(transaction),\n      signature: parsedSignature.serializedSignature,\n      intentScope: \"TRANSACTION_DATA\",\n      client: __privateGet(this, _client)\n    });\n  }\n};\n_data = new WeakMap();\n_client = new WeakMap();\nlet ZkLoginPublicIdentifier = _ZkLoginPublicIdentifier;\nfunction toZkLoginPublicIdentifier(addressSeed, iss, options) {\n  const addressSeedBytesBigEndian = toPaddedBigEndianBytes(addressSeed, 32);\n  const issBytes = new TextEncoder().encode(iss);\n  const tmp = new Uint8Array(1 + issBytes.length + addressSeedBytesBigEndian.length);\n  tmp.set([issBytes.length], 0);\n  tmp.set(issBytes, 1);\n  tmp.set(addressSeedBytesBigEndian, 1 + issBytes.length);\n  return new ZkLoginPublicIdentifier(tmp, options);\n}\nconst VerifyZkLoginSignatureQuery = graphql(`\n\tquery Zklogin(\n\t\t$bytes: Base64!\n\t\t$signature: Base64!\n\t\t$intentScope: ZkLoginIntentScope!\n\t\t$author: SuiAddress!\n\t) {\n\t\tverifyZkloginSignature(\n\t\t\tbytes: $bytes\n\t\t\tsignature: $signature\n\t\t\tintentScope: $intentScope\n\t\t\tauthor: $author\n\t\t) {\n\t\t\tsuccess\n\t\t\terrors\n\t\t}\n\t}\n`);\nasync function graphqlVerifyZkLoginSignature({\n  address,\n  bytes,\n  signature,\n  intentScope,\n  client = new SuiGraphQLClient({\n    url: \"https://sui-mainnet.mystenlabs.com/graphql\"\n  })\n}) {\n  const resp = await client.query({\n    query: VerifyZkLoginSignatureQuery,\n    variables: {\n      bytes,\n      signature,\n      intentScope,\n      author: address\n    }\n  });\n  return resp.data?.verifyZkloginSignature.success === true && resp.data?.verifyZkloginSignature.errors.length === 0;\n}\nfunction parseSerializedZkLoginSignature(signature) {\n  const bytes = typeof signature === \"string\" ? fromBase64(signature) : signature;\n  if (bytes[0] !== SIGNATURE_SCHEME_TO_FLAG.ZkLogin) {\n    throw new Error(\"Invalid signature scheme\");\n  }\n  const signatureBytes = bytes.slice(1);\n  const { inputs, maxEpoch, userSignature } = parseZkLoginSignature(signatureBytes);\n  const { issBase64Details, addressSeed } = inputs;\n  const iss = extractClaimValue(issBase64Details, \"iss\");\n  const publicIdentifer = toZkLoginPublicIdentifier(BigInt(addressSeed), iss);\n  return {\n    serializedSignature: toBase64(bytes),\n    signatureScheme: \"ZkLogin\",\n    zkLogin: {\n      inputs,\n      maxEpoch,\n      userSignature,\n      iss,\n      addressSeed: BigInt(addressSeed)\n    },\n    signature: bytes,\n    publicKey: publicIdentifer.toRawBytes()\n  };\n}\nexport {\n  ZkLoginPublicIdentifier,\n  parseSerializedZkLoginSignature,\n  toZkLoginPublicIdentifier\n};\n//# sourceMappingURL=publickey.js.map\n","import { fromBase64, toBase64 } from \"@mysten/bcs\";\nimport { SIGNATURE_SCHEME_TO_FLAG } from \"../cryptography/signature-scheme.js\";\nimport { zkLoginSignature } from \"./bcs.js\";\nfunction getZkLoginSignatureBytes({ inputs, maxEpoch, userSignature }) {\n  return zkLoginSignature.serialize(\n    {\n      inputs,\n      maxEpoch,\n      userSignature: typeof userSignature === \"string\" ? fromBase64(userSignature) : userSignature\n    },\n    { maxSize: 2048 }\n  ).toBytes();\n}\nfunction getZkLoginSignature({ inputs, maxEpoch, userSignature }) {\n  const bytes = getZkLoginSignatureBytes({ inputs, maxEpoch, userSignature });\n  const signatureBytes = new Uint8Array(bytes.length + 1);\n  signatureBytes.set([SIGNATURE_SCHEME_TO_FLAG.ZkLogin]);\n  signatureBytes.set(bytes, 1);\n  return toBase64(signatureBytes);\n}\nfunction parseZkLoginSignature(signature) {\n  return zkLoginSignature.parse(typeof signature === \"string\" ? fromBase64(signature) : signature);\n}\nexport {\n  getZkLoginSignature,\n  parseZkLoginSignature\n};\n//# sourceMappingURL=signature.js.map\n","import { fromBase64, toBase64 } from \"@mysten/bcs\";\nimport { bcs } from \"../bcs/index.js\";\nimport { parseSerializedZkLoginSignature } from \"../zklogin/publickey.js\";\nimport {\n  SIGNATURE_FLAG_TO_SCHEME,\n  SIGNATURE_SCHEME_TO_FLAG,\n  SIGNATURE_SCHEME_TO_SIZE\n} from \"./signature-scheme.js\";\nfunction toSerializedSignature({\n  signature,\n  signatureScheme,\n  publicKey\n}) {\n  if (!publicKey) {\n    throw new Error(\"`publicKey` is required\");\n  }\n  const pubKeyBytes = publicKey.toRawBytes();\n  const serializedSignature = new Uint8Array(1 + signature.length + pubKeyBytes.length);\n  serializedSignature.set([SIGNATURE_SCHEME_TO_FLAG[signatureScheme]]);\n  serializedSignature.set(signature, 1);\n  serializedSignature.set(pubKeyBytes, 1 + signature.length);\n  return toBase64(serializedSignature);\n}\nfunction parseSerializedSignature(serializedSignature) {\n  const bytes = fromBase64(serializedSignature);\n  const signatureScheme = SIGNATURE_FLAG_TO_SCHEME[bytes[0]];\n  switch (signatureScheme) {\n    case \"MultiSig\":\n      const multisig = bcs.MultiSig.parse(bytes.slice(1));\n      return {\n        serializedSignature,\n        signatureScheme,\n        multisig,\n        bytes\n      };\n    case \"ZkLogin\":\n      return parseSerializedZkLoginSignature(serializedSignature);\n    case \"ED25519\":\n    case \"Secp256k1\":\n    case \"Secp256r1\":\n      const size = SIGNATURE_SCHEME_TO_SIZE[signatureScheme];\n      const signature = bytes.slice(1, bytes.length - size);\n      const publicKey = bytes.slice(1 + signature.length);\n      return {\n        serializedSignature,\n        signatureScheme,\n        signature,\n        publicKey,\n        bytes\n      };\n    default:\n      throw new Error(\"Unsupported signature scheme\");\n  }\n}\nexport {\n  parseSerializedSignature,\n  toSerializedSignature\n};\n//# sourceMappingURL=signature.js.map\n","import { bcs, toBase64 } from \"@mysten/bcs\";\nimport { blake2b } from \"@noble/hashes/blake2b\";\nimport { bech32 } from \"bech32\";\nimport { messageWithIntent } from \"./intent.js\";\nimport { SIGNATURE_FLAG_TO_SCHEME, SIGNATURE_SCHEME_TO_FLAG } from \"./signature-scheme.js\";\nimport { toSerializedSignature } from \"./signature.js\";\nconst PRIVATE_KEY_SIZE = 32;\nconst LEGACY_PRIVATE_KEY_SIZE = 64;\nconst SUI_PRIVATE_KEY_PREFIX = \"suiprivkey\";\nclass Signer {\n  /**\n   * Sign messages with a specific intent. By combining the message bytes with the intent before hashing and signing,\n   * it ensures that a signed message is tied to a specific purpose and domain separator is provided\n   */\n  async signWithIntent(bytes, intent) {\n    const intentMessage = messageWithIntent(intent, bytes);\n    const digest = blake2b(intentMessage, { dkLen: 32 });\n    const signature = toSerializedSignature({\n      signature: await this.sign(digest),\n      signatureScheme: this.getKeyScheme(),\n      publicKey: this.getPublicKey()\n    });\n    return {\n      signature,\n      bytes: toBase64(bytes)\n    };\n  }\n  /**\n   * Signs provided transaction by calling `signWithIntent()` with a `TransactionData` provided as intent scope\n   */\n  async signTransaction(bytes) {\n    return this.signWithIntent(bytes, \"TransactionData\");\n  }\n  /**\n   * Signs provided personal message by calling `signWithIntent()` with a `PersonalMessage` provided as intent scope\n   */\n  async signPersonalMessage(bytes) {\n    const { signature } = await this.signWithIntent(\n      bcs.vector(bcs.u8()).serialize(bytes).toBytes(),\n      \"PersonalMessage\"\n    );\n    return {\n      bytes: toBase64(bytes),\n      signature\n    };\n  }\n  toSuiAddress() {\n    return this.getPublicKey().toSuiAddress();\n  }\n}\nclass Keypair extends Signer {\n}\nfunction decodeSuiPrivateKey(value) {\n  const { prefix, words } = bech32.decode(value);\n  if (prefix !== SUI_PRIVATE_KEY_PREFIX) {\n    throw new Error(\"invalid private key prefix\");\n  }\n  const extendedSecretKey = new Uint8Array(bech32.fromWords(words));\n  const secretKey = extendedSecretKey.slice(1);\n  const signatureScheme = SIGNATURE_FLAG_TO_SCHEME[extendedSecretKey[0]];\n  return {\n    schema: signatureScheme,\n    secretKey\n  };\n}\nfunction encodeSuiPrivateKey(bytes, scheme) {\n  if (bytes.length !== PRIVATE_KEY_SIZE) {\n    throw new Error(\"Invalid bytes length\");\n  }\n  const flag = SIGNATURE_SCHEME_TO_FLAG[scheme];\n  const privKeyBytes = new Uint8Array(bytes.length + 1);\n  privKeyBytes.set([flag]);\n  privKeyBytes.set(bytes, 1);\n  return bech32.encode(SUI_PRIVATE_KEY_PREFIX, bech32.toWords(privKeyBytes));\n}\nexport {\n  Keypair,\n  LEGACY_PRIVATE_KEY_SIZE,\n  PRIVATE_KEY_SIZE,\n  SUI_PRIVATE_KEY_PREFIX,\n  Signer,\n  decodeSuiPrivateKey,\n  encodeSuiPrivateKey\n};\n//# sourceMappingURL=keypair.js.map\n","function number(n) {\n    if (!Number.isSafeInteger(n) || n < 0)\n        throw new Error(`positive integer expected, not ${n}`);\n}\nfunction bool(b) {\n    if (typeof b !== 'boolean')\n        throw new Error(`boolean expected, not ${b}`);\n}\n// copied from utils\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\nfunction bytes(b, ...lengths) {\n    if (!isBytes(b))\n        throw new Error('Uint8Array expected');\n    if (lengths.length > 0 && !lengths.includes(b.length))\n        throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\nfunction hash(h) {\n    if (typeof h !== 'function' || typeof h.create !== 'function')\n        throw new Error('Hash should be wrapped by utils.wrapConstructor');\n    number(h.outputLen);\n    number(h.blockLen);\n}\nfunction exists(instance, checkFinished = true) {\n    if (instance.destroyed)\n        throw new Error('Hash instance has been destroyed');\n    if (checkFinished && instance.finished)\n        throw new Error('Hash#digest() has already been called');\n}\nfunction output(out, instance) {\n    bytes(out);\n    const min = instance.outputLen;\n    if (out.length < min) {\n        throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n    }\n}\nexport { number, bool, bytes, hash, exists, output };\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n//# sourceMappingURL=_assert.js.map","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a) {\n    return (a instanceof Uint8Array ||\n        (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array'));\n}\n// Cast array to different type\nexport const u8 = (arr) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr) => new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n// Cast array to view\nexport const createView = (arr) => new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word, shift) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word, shift) => (word << shift) | ((word >>> (32 - shift)) >>> 0);\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word) => ((word << 24) & 0xff000000) |\n    ((word << 8) & 0xff0000) |\n    ((word >>> 8) & 0xff00) |\n    ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n) => n : (n) => byteSwap(n);\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr) {\n    for (let i = 0; i < arr.length; i++) {\n        arr[i] = byteSwap(arr[i]);\n    }\n}\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) => i.toString(16).padStart(2, '0'));\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes) {\n    abytes(bytes);\n    // pre-caching improves the speed 6x\n    let hex = '';\n    for (let i = 0; i < bytes.length; i++) {\n        hex += hexes[bytes[i]];\n    }\n    return hex;\n}\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 };\nfunction asciiToBase16(char) {\n    if (char >= asciis._0 && char <= asciis._9)\n        return char - asciis._0;\n    if (char >= asciis._A && char <= asciis._F)\n        return char - (asciis._A - 10);\n    if (char >= asciis._a && char <= asciis._f)\n        return char - (asciis._a - 10);\n    return;\n}\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex) {\n    if (typeof hex !== 'string')\n        throw new Error('hex string expected, got ' + typeof hex);\n    const hl = hex.length;\n    const al = hl / 2;\n    if (hl % 2)\n        throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n    const array = new Uint8Array(al);\n    for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n        const n1 = asciiToBase16(hex.charCodeAt(hi));\n        const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n        if (n1 === undefined || n2 === undefined) {\n            const char = hex[hi] + hex[hi + 1];\n            throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n        }\n        array[ai] = n1 * 16 + n2;\n    }\n    return array;\n}\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => { };\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters, tick, cb) {\n    let ts = Date.now();\n    for (let i = 0; i < iters; i++) {\n        cb(i);\n        // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n        const diff = Date.now() - ts;\n        if (diff >= 0 && diff < tick)\n            continue;\n        await nextTick();\n        ts += diff;\n    }\n}\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str) {\n    if (typeof str !== 'string')\n        throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n    return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data) {\n    if (typeof data === 'string')\n        data = utf8ToBytes(data);\n    abytes(data);\n    return data;\n}\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays) {\n    let sum = 0;\n    for (let i = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        abytes(a);\n        sum += a.length;\n    }\n    const res = new Uint8Array(sum);\n    for (let i = 0, pad = 0; i < arrays.length; i++) {\n        const a = arrays[i];\n        res.set(a, pad);\n        pad += a.length;\n    }\n    return res;\n}\n// For runtime check if class implements interface\nexport class Hash {\n    // Safe version that clones internal state\n    clone() {\n        return this._cloneInto();\n    }\n}\nconst toStr = {}.toString;\nexport function checkOpts(defaults, opts) {\n    if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n        throw new Error('Options should be object or undefined');\n    const merged = Object.assign(defaults, opts);\n    return merged;\n}\nexport function wrapConstructor(hashCons) {\n    const hashC = (msg) => hashCons().update(toBytes(msg)).digest();\n    const tmp = hashCons();\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = () => hashCons();\n    return hashC;\n}\nexport function wrapConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\nexport function wrapXOFConstructorWithOpts(hashCons) {\n    const hashC = (msg, opts) => hashCons(opts).update(toBytes(msg)).digest();\n    const tmp = hashCons({});\n    hashC.outputLen = tmp.outputLen;\n    hashC.blockLen = tmp.blockLen;\n    hashC.create = (opts) => hashCons(opts);\n    return hashC;\n}\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32) {\n    if (crypto && typeof crypto.getRandomValues === 'function') {\n        return crypto.getRandomValues(new Uint8Array(bytesLength));\n    }\n    // Legacy Node.js compatibility\n    if (crypto && typeof crypto.randomBytes === 'function') {\n        return crypto.randomBytes(bytesLength);\n    }\n    throw new Error('crypto.getRandomValues must be defined');\n}\n//# sourceMappingURL=utils.js.map","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n * @example\n * import { hmac } from '@noble/hashes/hmac';\n * import { sha256 } from '@noble/hashes/sha2';\n * const mac1 = hmac(sha256, 'key', 'message');\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { hash as assertHash, number as assertNumber } from './_assert.js';\nimport { hmac } from './hmac.js';\nimport { createView, toBytes, checkOpts, asyncLoop } from './utils.js';\n// Common prologue and epilogue for sync/async functions\nfunction pbkdf2Init(hash, _password, _salt, _opts) {\n    assertHash(hash);\n    const opts = checkOpts({ dkLen: 32, asyncTick: 10 }, _opts);\n    const { c, dkLen, asyncTick } = opts;\n    assertNumber(c);\n    assertNumber(dkLen);\n    assertNumber(asyncTick);\n    if (c < 1)\n        throw new Error('PBKDF2: iterations (c) should be >= 1');\n    const password = toBytes(_password);\n    const salt = toBytes(_salt);\n    // DK = PBKDF2(PRF, Password, Salt, c, dkLen);\n    const DK = new Uint8Array(dkLen);\n    // U1 = PRF(Password, Salt + INT_32_BE(i))\n    const PRF = hmac.create(hash, password);\n    const PRFSalt = PRF._cloneInto().update(salt);\n    return { c, dkLen, asyncTick, DK, PRF, PRFSalt };\n}\nfunction pbkdf2Output(PRF, PRFSalt, DK, prfW, u) {\n    PRF.destroy();\n    PRFSalt.destroy();\n    if (prfW)\n        prfW.destroy();\n    u.fill(0);\n    return DK;\n}\n/**\n * PBKDF2-HMAC: RFC 2898 key derivation function\n * @param hash - hash function that would be used e.g. sha256\n * @param password - password from which a derived key is generated\n * @param salt - cryptographic salt\n * @param opts - {c, dkLen} where c is work factor and dkLen is output message size\n */\nexport function pbkdf2(hash, password, salt, opts) {\n    const { c, dkLen, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        for (let ui = 1; ui < c; ui++) {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        }\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\nexport async function pbkdf2Async(hash, password, salt, opts) {\n    const { c, dkLen, asyncTick, DK, PRF, PRFSalt } = pbkdf2Init(hash, password, salt, opts);\n    let prfW; // Working copy\n    const arr = new Uint8Array(4);\n    const view = createView(arr);\n    const u = new Uint8Array(PRF.outputLen);\n    // DK = T1 + T2 + ⋯ + Tdklen/hlen\n    for (let ti = 1, pos = 0; pos < dkLen; ti++, pos += PRF.outputLen) {\n        // Ti = F(Password, Salt, c, i)\n        const Ti = DK.subarray(pos, pos + PRF.outputLen);\n        view.setInt32(0, ti, false);\n        // F(Password, Salt, c, i) = U1 ^ U2 ^ ⋯ ^ Uc\n        // U1 = PRF(Password, Salt + INT_32_BE(i))\n        (prfW = PRFSalt._cloneInto(prfW)).update(arr).digestInto(u);\n        Ti.set(u.subarray(0, Ti.length));\n        await asyncLoop(c - 1, asyncTick, () => {\n            // Uc = PRF(Password, Uc−1)\n            PRF._cloneInto(prfW).update(u).digestInto(u);\n            for (let i = 0; i < Ti.length; i++)\n                Ti[i] ^= u[i];\n        });\n    }\n    return pbkdf2Output(PRF, PRFSalt, DK, prfW, u);\n}\n//# sourceMappingURL=pbkdf2.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","const U32_MASK64 = /* @__PURE__ */ BigInt(2 ** 32 - 1);\nconst _32n = /* @__PURE__ */ BigInt(32);\n// We are not using BigUint64Array, because they are extremely slow as per 2022\nfunction fromBig(n, le = false) {\n    if (le)\n        return { h: Number(n & U32_MASK64), l: Number((n >> _32n) & U32_MASK64) };\n    return { h: Number((n >> _32n) & U32_MASK64) | 0, l: Number(n & U32_MASK64) | 0 };\n}\nfunction split(lst, le = false) {\n    let Ah = new Uint32Array(lst.length);\n    let Al = new Uint32Array(lst.length);\n    for (let i = 0; i < lst.length; i++) {\n        const { h, l } = fromBig(lst[i], le);\n        [Ah[i], Al[i]] = [h, l];\n    }\n    return [Ah, Al];\n}\nconst toBig = (h, l) => (BigInt(h >>> 0) << _32n) | BigInt(l >>> 0);\n// for Shift in [0, 32)\nconst shrSH = (h, _l, s) => h >>> s;\nconst shrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in [1, 32)\nconst rotrSH = (h, l, s) => (h >>> s) | (l << (32 - s));\nconst rotrSL = (h, l, s) => (h << (32 - s)) | (l >>> s);\n// Right rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotrBH = (h, l, s) => (h << (64 - s)) | (l >>> (s - 32));\nconst rotrBL = (h, l, s) => (h >>> (s - 32)) | (l << (64 - s));\n// Right rotate for shift===32 (just swaps l&h)\nconst rotr32H = (_h, l) => l;\nconst rotr32L = (h, _l) => h;\n// Left rotate for Shift in [1, 32)\nconst rotlSH = (h, l, s) => (h << s) | (l >>> (32 - s));\nconst rotlSL = (h, l, s) => (l << s) | (h >>> (32 - s));\n// Left rotate for Shift in (32, 64), NOTE: 32 is special case.\nconst rotlBH = (h, l, s) => (l << (s - 32)) | (h >>> (64 - s));\nconst rotlBL = (h, l, s) => (h << (s - 32)) | (l >>> (64 - s));\n// JS uses 32-bit signed integers for bitwise operations which means we cannot\n// simple take carry out of low bit sum by shift, we need to use division.\nfunction add(Ah, Al, Bh, Bl) {\n    const l = (Al >>> 0) + (Bl >>> 0);\n    return { h: (Ah + Bh + ((l / 2 ** 32) | 0)) | 0, l: l | 0 };\n}\n// Addition with more than 2 elements\nconst add3L = (Al, Bl, Cl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0);\nconst add3H = (low, Ah, Bh, Ch) => (Ah + Bh + Ch + ((low / 2 ** 32) | 0)) | 0;\nconst add4L = (Al, Bl, Cl, Dl) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0);\nconst add4H = (low, Ah, Bh, Ch, Dh) => (Ah + Bh + Ch + Dh + ((low / 2 ** 32) | 0)) | 0;\nconst add5L = (Al, Bl, Cl, Dl, El) => (Al >>> 0) + (Bl >>> 0) + (Cl >>> 0) + (Dl >>> 0) + (El >>> 0);\nconst add5H = (low, Ah, Bh, Ch, Dh, Eh) => (Ah + Bh + Ch + Dh + Eh + ((low / 2 ** 32) | 0)) | 0;\n// prettier-ignore\nexport { fromBig, split, toBig, shrSH, shrSL, rotrSH, rotrSL, rotrBH, rotrBL, rotr32H, rotr32L, rotlSH, rotlSL, rotlBH, rotlBL, add, add3L, add3H, add4L, add4H, add5H, add5L, };\n// prettier-ignore\nconst u64 = {\n    fromBig, split, toBig,\n    shrSH, shrSL,\n    rotrSH, rotrSL, rotrBH, rotrBL,\n    rotr32H, rotr32L,\n    rotlSH, rotlSL, rotlBH, rotlBL,\n    add, add3L, add3H, add4L, add4H, add5H, add5L,\n};\nexport default u64;\n//# sourceMappingURL=_u64.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nexport class SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nexport class SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nexport class SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","/*! scure-bip39 - MIT License (c) 2022 Patricio Palladino, Paul Miller (paulmillr.com) */\nimport { bytes as assertBytes, number as assertNumber } from '@noble/hashes/_assert';\nimport { pbkdf2, pbkdf2Async } from '@noble/hashes/pbkdf2';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { sha512 } from '@noble/hashes/sha512';\nimport { randomBytes } from '@noble/hashes/utils';\nimport { utils as baseUtils } from '@scure/base';\n// Japanese wordlist\nconst isJapanese = (wordlist) => wordlist[0] === '\\u3042\\u3044\\u3053\\u304f\\u3057\\u3093';\n// Normalization replaces equivalent sequences of characters\n// so that any two texts that are equivalent will be reduced\n// to the same sequence of code points, called the normal form of the original text.\n// https://tonsky.me/blog/unicode/#why-is-a----\nfunction nfkd(str) {\n    if (typeof str !== 'string')\n        throw new TypeError(`Invalid mnemonic type: ${typeof str}`);\n    return str.normalize('NFKD');\n}\nfunction normalize(str) {\n    const norm = nfkd(str);\n    const words = norm.split(' ');\n    if (![12, 15, 18, 21, 24].includes(words.length))\n        throw new Error('Invalid mnemonic');\n    return { nfkd: norm, words };\n}\nfunction assertEntropy(entropy) {\n    assertBytes(entropy, 16, 20, 24, 28, 32);\n}\n/**\n * Generate x random words. Uses Cryptographically-Secure Random Number Generator.\n * @param wordlist imported wordlist for specific language\n * @param strength mnemonic strength 128-256 bits\n * @example\n * generateMnemonic(wordlist, 128)\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function generateMnemonic(wordlist, strength = 128) {\n    assertNumber(strength);\n    if (strength % 32 !== 0 || strength > 256)\n        throw new TypeError('Invalid entropy');\n    return entropyToMnemonic(randomBytes(strength / 8), wordlist);\n}\nconst calcChecksum = (entropy) => {\n    // Checksum is ent.length/4 bits long\n    const bitsLeft = 8 - entropy.length / 4;\n    // Zero rightmost \"bitsLeft\" bits in byte\n    // For example: bitsLeft=4 val=10111101 -> 10110000\n    return new Uint8Array([(sha256(entropy)[0] >> bitsLeft) << bitsLeft]);\n};\nfunction getCoder(wordlist) {\n    if (!Array.isArray(wordlist) || wordlist.length !== 2048 || typeof wordlist[0] !== 'string')\n        throw new Error('Wordlist: expected array of 2048 strings');\n    wordlist.forEach((i) => {\n        if (typeof i !== 'string')\n            throw new Error(`Wordlist: non-string element: ${i}`);\n    });\n    return baseUtils.chain(baseUtils.checksum(1, calcChecksum), baseUtils.radix2(11, true), baseUtils.alphabet(wordlist));\n}\n/**\n * Reversible: Converts mnemonic string to raw entropy in form of byte array.\n * @param mnemonic 12-24 words\n * @param wordlist imported wordlist for specific language\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToEntropy(mnem, wordlist)\n * // Produces\n * new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ])\n */\nexport function mnemonicToEntropy(mnemonic, wordlist) {\n    const { words } = normalize(mnemonic);\n    const entropy = getCoder(wordlist).decode(words);\n    assertEntropy(entropy);\n    return entropy;\n}\n/**\n * Reversible: Converts raw entropy in form of byte array to mnemonic string.\n * @param entropy byte array\n * @param wordlist imported wordlist for specific language\n * @returns 12-24 words\n * @example\n * const ent = new Uint8Array([\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f,\n *   0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f\n * ]);\n * entropyToMnemonic(ent, wordlist);\n * // 'legal winner thank year wave sausage worth useful legal winner thank yellow'\n */\nexport function entropyToMnemonic(entropy, wordlist) {\n    assertEntropy(entropy);\n    const words = getCoder(wordlist).encode(entropy);\n    return words.join(isJapanese(wordlist) ? '\\u3000' : ' ');\n}\n/**\n * Validates mnemonic for being 12-24 words contained in `wordlist`.\n */\nexport function validateMnemonic(mnemonic, wordlist) {\n    try {\n        mnemonicToEntropy(mnemonic, wordlist);\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}\nconst salt = (passphrase) => nfkd(`mnemonic${passphrase}`);\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * await mnemonicToSeed(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeed(mnemonic, passphrase = '') {\n    return pbkdf2Async(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n/**\n * Irreversible: Uses KDF to derive 64 bytes of key data from mnemonic + optional password.\n * @param mnemonic 12-24 words\n * @param passphrase string that will additionally protect the key\n * @returns 64 bytes of key data\n * @example\n * const mnem = 'legal winner thank year wave sausage worth useful legal winner thank yellow';\n * mnemonicToSeedSync(mnem, 'password');\n * // new Uint8Array([...64 bytes])\n */\nexport function mnemonicToSeedSync(mnemonic, passphrase = '') {\n    return pbkdf2(sha512, normalize(mnemonic).nfkd, salt(passphrase), { c: 2048, dkLen: 64 });\n}\n","import { toHex } from \"@mysten/bcs\";\nimport { mnemonicToSeedSync as bip39MnemonicToSeedSync } from \"@scure/bip39\";\nfunction isValidHardenedPath(path) {\n  if (!new RegExp(\"^m\\\\/44'\\\\/784'\\\\/[0-9]+'\\\\/[0-9]+'\\\\/[0-9]+'+$\").test(path)) {\n    return false;\n  }\n  return true;\n}\nfunction isValidBIP32Path(path) {\n  if (!new RegExp(\"^m\\\\/(54|74)'\\\\/784'\\\\/[0-9]+'\\\\/[0-9]+\\\\/[0-9]+$\").test(path)) {\n    return false;\n  }\n  return true;\n}\nfunction mnemonicToSeed(mnemonics) {\n  return bip39MnemonicToSeedSync(mnemonics, \"\");\n}\nfunction mnemonicToSeedHex(mnemonics) {\n  return toHex(mnemonicToSeed(mnemonics));\n}\nexport {\n  isValidBIP32Path,\n  isValidHardenedPath,\n  mnemonicToSeed,\n  mnemonicToSeedHex\n};\n//# sourceMappingURL=mnemonics.js.map\n","import { hash as assertHash, bytes as assertBytes, exists as assertExists } from './_assert.js';\nimport { Hash, toBytes } from './utils.js';\n// HMAC (RFC 2104)\nexport class HMAC extends Hash {\n    constructor(hash, _key) {\n        super();\n        this.finished = false;\n        this.destroyed = false;\n        assertHash(hash);\n        const key = toBytes(_key);\n        this.iHash = hash.create();\n        if (typeof this.iHash.update !== 'function')\n            throw new Error('Expected instance of class which extends utils.Hash');\n        this.blockLen = this.iHash.blockLen;\n        this.outputLen = this.iHash.outputLen;\n        const blockLen = this.blockLen;\n        const pad = new Uint8Array(blockLen);\n        // blockLen can be bigger than outputLen\n        pad.set(key.length > blockLen ? hash.create().update(key).digest() : key);\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36;\n        this.iHash.update(pad);\n        // By doing update (processing of first block) of outer hash here we can re-use it between multiple calls via clone\n        this.oHash = hash.create();\n        // Undo internal XOR && apply outer XOR\n        for (let i = 0; i < pad.length; i++)\n            pad[i] ^= 0x36 ^ 0x5c;\n        this.oHash.update(pad);\n        pad.fill(0);\n    }\n    update(buf) {\n        assertExists(this);\n        this.iHash.update(buf);\n        return this;\n    }\n    digestInto(out) {\n        assertExists(this);\n        assertBytes(out, this.outputLen);\n        this.finished = true;\n        this.iHash.digestInto(out);\n        this.oHash.update(out);\n        this.oHash.digestInto(out);\n        this.destroy();\n    }\n    digest() {\n        const out = new Uint8Array(this.oHash.outputLen);\n        this.digestInto(out);\n        return out;\n    }\n    _cloneInto(to) {\n        // Create new instance without calling constructor since key already in state and we don't know it.\n        to || (to = Object.create(Object.getPrototypeOf(this), {}));\n        const { oHash, iHash, finished, destroyed, blockLen, outputLen } = this;\n        to = to;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        to.blockLen = blockLen;\n        to.outputLen = outputLen;\n        to.oHash = oHash._cloneInto(to.oHash);\n        to.iHash = iHash._cloneInto(to.iHash);\n        return to;\n    }\n    destroy() {\n        this.destroyed = true;\n        this.oHash.destroy();\n        this.iHash.destroy();\n    }\n}\n/**\n * HMAC: RFC2104 message authentication code.\n * @param hash - function that would be used e.g. sha256\n * @param key - message key\n * @param message - message data\n */\nexport const hmac = (hash, key, message) => new HMAC(hash, key).update(message).digest();\nhmac.create = (hash, key) => new HMAC(hash, key);\n//# sourceMappingURL=hmac.js.map","import { exists, output } from './_assert.js';\nimport { Hash, createView, toBytes } from './utils.js';\n// Polyfill for Safari 14\nfunction setBigUint64(view, byteOffset, value, isLE) {\n    if (typeof view.setBigUint64 === 'function')\n        return view.setBigUint64(byteOffset, value, isLE);\n    const _32n = BigInt(32);\n    const _u32_max = BigInt(0xffffffff);\n    const wh = Number((value >> _32n) & _u32_max);\n    const wl = Number(value & _u32_max);\n    const h = isLE ? 4 : 0;\n    const l = isLE ? 0 : 4;\n    view.setUint32(byteOffset + h, wh, isLE);\n    view.setUint32(byteOffset + l, wl, isLE);\n}\n// Choice: a ? b : c\nexport const Chi = (a, b, c) => (a & b) ^ (~a & c);\n// Majority function, true if any two inpust is true\nexport const Maj = (a, b, c) => (a & b) ^ (a & c) ^ (b & c);\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport class HashMD extends Hash {\n    constructor(blockLen, outputLen, padOffset, isLE) {\n        super();\n        this.blockLen = blockLen;\n        this.outputLen = outputLen;\n        this.padOffset = padOffset;\n        this.isLE = isLE;\n        this.finished = false;\n        this.length = 0;\n        this.pos = 0;\n        this.destroyed = false;\n        this.buffer = new Uint8Array(blockLen);\n        this.view = createView(this.buffer);\n    }\n    update(data) {\n        exists(this);\n        const { view, buffer, blockLen } = this;\n        data = toBytes(data);\n        const len = data.length;\n        for (let pos = 0; pos < len;) {\n            const take = Math.min(blockLen - this.pos, len - pos);\n            // Fast path: we have at least one block in input, cast it to view and process\n            if (take === blockLen) {\n                const dataView = createView(data);\n                for (; blockLen <= len - pos; pos += blockLen)\n                    this.process(dataView, pos);\n                continue;\n            }\n            buffer.set(data.subarray(pos, pos + take), this.pos);\n            this.pos += take;\n            pos += take;\n            if (this.pos === blockLen) {\n                this.process(view, 0);\n                this.pos = 0;\n            }\n        }\n        this.length += data.length;\n        this.roundClean();\n        return this;\n    }\n    digestInto(out) {\n        exists(this);\n        output(out, this);\n        this.finished = true;\n        // Padding\n        // We can avoid allocation of buffer for padding completely if it\n        // was previously not allocated here. But it won't change performance.\n        const { buffer, view, blockLen, isLE } = this;\n        let { pos } = this;\n        // append the bit '1' to the message\n        buffer[pos++] = 0b10000000;\n        this.buffer.subarray(pos).fill(0);\n        // we have less than padOffset left in buffer, so we cannot put length in\n        // current block, need process it and pad again\n        if (this.padOffset > blockLen - pos) {\n            this.process(view, 0);\n            pos = 0;\n        }\n        // Pad until full block byte with zeros\n        for (let i = pos; i < blockLen; i++)\n            buffer[i] = 0;\n        // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n        // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n        // So we just write lowest 64 bits of that value.\n        setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n        this.process(view, 0);\n        const oview = createView(out);\n        const len = this.outputLen;\n        // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n        if (len % 4)\n            throw new Error('_sha2: outputLen should be aligned to 32bit');\n        const outLen = len / 4;\n        const state = this.get();\n        if (outLen > state.length)\n            throw new Error('_sha2: outputLen bigger than state');\n        for (let i = 0; i < outLen; i++)\n            oview.setUint32(4 * i, state[i], isLE);\n    }\n    digest() {\n        const { buffer, outputLen } = this;\n        this.digestInto(buffer);\n        const res = buffer.slice(0, outputLen);\n        this.destroy();\n        return res;\n    }\n    _cloneInto(to) {\n        to || (to = new this.constructor());\n        to.set(...this.get());\n        const { blockLen, buffer, length, finished, destroyed, pos } = this;\n        to.length = length;\n        to.pos = pos;\n        to.finished = finished;\n        to.destroyed = destroyed;\n        if (length % blockLen)\n            to.buffer.set(buffer);\n        return to;\n    }\n}\n//# sourceMappingURL=_md.js.map","import { HashMD } from './_md.js';\nimport u64 from './_u64.js';\nimport { wrapConstructor } from './utils.js';\n// Round contants (first 32 bits of the fractional parts of the cube roots of the first 80 primes 2..409):\n// prettier-ignore\nconst [SHA512_Kh, SHA512_Kl] = /* @__PURE__ */ (() => u64.split([\n    '0x428a2f98d728ae22', '0x7137449123ef65cd', '0xb5c0fbcfec4d3b2f', '0xe9b5dba58189dbbc',\n    '0x3956c25bf348b538', '0x59f111f1b605d019', '0x923f82a4af194f9b', '0xab1c5ed5da6d8118',\n    '0xd807aa98a3030242', '0x12835b0145706fbe', '0x243185be4ee4b28c', '0x550c7dc3d5ffb4e2',\n    '0x72be5d74f27b896f', '0x80deb1fe3b1696b1', '0x9bdc06a725c71235', '0xc19bf174cf692694',\n    '0xe49b69c19ef14ad2', '0xefbe4786384f25e3', '0x0fc19dc68b8cd5b5', '0x240ca1cc77ac9c65',\n    '0x2de92c6f592b0275', '0x4a7484aa6ea6e483', '0x5cb0a9dcbd41fbd4', '0x76f988da831153b5',\n    '0x983e5152ee66dfab', '0xa831c66d2db43210', '0xb00327c898fb213f', '0xbf597fc7beef0ee4',\n    '0xc6e00bf33da88fc2', '0xd5a79147930aa725', '0x06ca6351e003826f', '0x142929670a0e6e70',\n    '0x27b70a8546d22ffc', '0x2e1b21385c26c926', '0x4d2c6dfc5ac42aed', '0x53380d139d95b3df',\n    '0x650a73548baf63de', '0x766a0abb3c77b2a8', '0x81c2c92e47edaee6', '0x92722c851482353b',\n    '0xa2bfe8a14cf10364', '0xa81a664bbc423001', '0xc24b8b70d0f89791', '0xc76c51a30654be30',\n    '0xd192e819d6ef5218', '0xd69906245565a910', '0xf40e35855771202a', '0x106aa07032bbd1b8',\n    '0x19a4c116b8d2d0c8', '0x1e376c085141ab53', '0x2748774cdf8eeb99', '0x34b0bcb5e19b48a8',\n    '0x391c0cb3c5c95a63', '0x4ed8aa4ae3418acb', '0x5b9cca4f7763e373', '0x682e6ff3d6b2b8a3',\n    '0x748f82ee5defb2fc', '0x78a5636f43172f60', '0x84c87814a1f0ab72', '0x8cc702081a6439ec',\n    '0x90befffa23631e28', '0xa4506cebde82bde9', '0xbef9a3f7b2c67915', '0xc67178f2e372532b',\n    '0xca273eceea26619c', '0xd186b8c721c0c207', '0xeada7dd6cde0eb1e', '0xf57d4f7fee6ed178',\n    '0x06f067aa72176fba', '0x0a637dc5a2c898a6', '0x113f9804bef90dae', '0x1b710b35131c471b',\n    '0x28db77f523047d84', '0x32caab7b40c72493', '0x3c9ebe0a15c9bebc', '0x431d67c49c100d4c',\n    '0x4cc5d4becb3e42b6', '0x597f299cfc657e2a', '0x5fcb6fab3ad6faec', '0x6c44198c4a475817'\n].map(n => BigInt(n))))();\n// Temporary buffer, not used to store anything between runs\nconst SHA512_W_H = /* @__PURE__ */ new Uint32Array(80);\nconst SHA512_W_L = /* @__PURE__ */ new Uint32Array(80);\nexport class SHA512 extends HashMD {\n    constructor() {\n        super(128, 64, 16, false);\n        // We cannot use array here since array allows indexing by variable which means optimizer/compiler cannot use registers.\n        // Also looks cleaner and easier to verify with spec.\n        // Initial state (first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19):\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x6a09e667 | 0;\n        this.Al = 0xf3bcc908 | 0;\n        this.Bh = 0xbb67ae85 | 0;\n        this.Bl = 0x84caa73b | 0;\n        this.Ch = 0x3c6ef372 | 0;\n        this.Cl = 0xfe94f82b | 0;\n        this.Dh = 0xa54ff53a | 0;\n        this.Dl = 0x5f1d36f1 | 0;\n        this.Eh = 0x510e527f | 0;\n        this.El = 0xade682d1 | 0;\n        this.Fh = 0x9b05688c | 0;\n        this.Fl = 0x2b3e6c1f | 0;\n        this.Gh = 0x1f83d9ab | 0;\n        this.Gl = 0xfb41bd6b | 0;\n        this.Hh = 0x5be0cd19 | 0;\n        this.Hl = 0x137e2179 | 0;\n    }\n    // prettier-ignore\n    get() {\n        const { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        return [Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl];\n    }\n    // prettier-ignore\n    set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl) {\n        this.Ah = Ah | 0;\n        this.Al = Al | 0;\n        this.Bh = Bh | 0;\n        this.Bl = Bl | 0;\n        this.Ch = Ch | 0;\n        this.Cl = Cl | 0;\n        this.Dh = Dh | 0;\n        this.Dl = Dl | 0;\n        this.Eh = Eh | 0;\n        this.El = El | 0;\n        this.Fh = Fh | 0;\n        this.Fl = Fl | 0;\n        this.Gh = Gh | 0;\n        this.Gl = Gl | 0;\n        this.Hh = Hh | 0;\n        this.Hl = Hl | 0;\n    }\n    process(view, offset) {\n        // Extend the first 16 words into the remaining 64 words w[16..79] of the message schedule array\n        for (let i = 0; i < 16; i++, offset += 4) {\n            SHA512_W_H[i] = view.getUint32(offset);\n            SHA512_W_L[i] = view.getUint32((offset += 4));\n        }\n        for (let i = 16; i < 80; i++) {\n            // s0 := (w[i-15] rightrotate 1) xor (w[i-15] rightrotate 8) xor (w[i-15] rightshift 7)\n            const W15h = SHA512_W_H[i - 15] | 0;\n            const W15l = SHA512_W_L[i - 15] | 0;\n            const s0h = u64.rotrSH(W15h, W15l, 1) ^ u64.rotrSH(W15h, W15l, 8) ^ u64.shrSH(W15h, W15l, 7);\n            const s0l = u64.rotrSL(W15h, W15l, 1) ^ u64.rotrSL(W15h, W15l, 8) ^ u64.shrSL(W15h, W15l, 7);\n            // s1 := (w[i-2] rightrotate 19) xor (w[i-2] rightrotate 61) xor (w[i-2] rightshift 6)\n            const W2h = SHA512_W_H[i - 2] | 0;\n            const W2l = SHA512_W_L[i - 2] | 0;\n            const s1h = u64.rotrSH(W2h, W2l, 19) ^ u64.rotrBH(W2h, W2l, 61) ^ u64.shrSH(W2h, W2l, 6);\n            const s1l = u64.rotrSL(W2h, W2l, 19) ^ u64.rotrBL(W2h, W2l, 61) ^ u64.shrSL(W2h, W2l, 6);\n            // SHA256_W[i] = s0 + s1 + SHA256_W[i - 7] + SHA256_W[i - 16];\n            const SUMl = u64.add4L(s0l, s1l, SHA512_W_L[i - 7], SHA512_W_L[i - 16]);\n            const SUMh = u64.add4H(SUMl, s0h, s1h, SHA512_W_H[i - 7], SHA512_W_H[i - 16]);\n            SHA512_W_H[i] = SUMh | 0;\n            SHA512_W_L[i] = SUMl | 0;\n        }\n        let { Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl } = this;\n        // Compression function main loop, 80 rounds\n        for (let i = 0; i < 80; i++) {\n            // S1 := (e rightrotate 14) xor (e rightrotate 18) xor (e rightrotate 41)\n            const sigma1h = u64.rotrSH(Eh, El, 14) ^ u64.rotrSH(Eh, El, 18) ^ u64.rotrBH(Eh, El, 41);\n            const sigma1l = u64.rotrSL(Eh, El, 14) ^ u64.rotrSL(Eh, El, 18) ^ u64.rotrBL(Eh, El, 41);\n            //const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n            const CHIh = (Eh & Fh) ^ (~Eh & Gh);\n            const CHIl = (El & Fl) ^ (~El & Gl);\n            // T1 = H + sigma1 + Chi(E, F, G) + SHA512_K[i] + SHA512_W[i]\n            // prettier-ignore\n            const T1ll = u64.add5L(Hl, sigma1l, CHIl, SHA512_Kl[i], SHA512_W_L[i]);\n            const T1h = u64.add5H(T1ll, Hh, sigma1h, CHIh, SHA512_Kh[i], SHA512_W_H[i]);\n            const T1l = T1ll | 0;\n            // S0 := (a rightrotate 28) xor (a rightrotate 34) xor (a rightrotate 39)\n            const sigma0h = u64.rotrSH(Ah, Al, 28) ^ u64.rotrBH(Ah, Al, 34) ^ u64.rotrBH(Ah, Al, 39);\n            const sigma0l = u64.rotrSL(Ah, Al, 28) ^ u64.rotrBL(Ah, Al, 34) ^ u64.rotrBL(Ah, Al, 39);\n            const MAJh = (Ah & Bh) ^ (Ah & Ch) ^ (Bh & Ch);\n            const MAJl = (Al & Bl) ^ (Al & Cl) ^ (Bl & Cl);\n            Hh = Gh | 0;\n            Hl = Gl | 0;\n            Gh = Fh | 0;\n            Gl = Fl | 0;\n            Fh = Eh | 0;\n            Fl = El | 0;\n            ({ h: Eh, l: El } = u64.add(Dh | 0, Dl | 0, T1h | 0, T1l | 0));\n            Dh = Ch | 0;\n            Dl = Cl | 0;\n            Ch = Bh | 0;\n            Cl = Bl | 0;\n            Bh = Ah | 0;\n            Bl = Al | 0;\n            const All = u64.add3L(T1l, sigma0l, MAJl);\n            Ah = u64.add3H(All, T1h, sigma0h, MAJh);\n            Al = All | 0;\n        }\n        // Add the compressed chunk to the current hash value\n        ({ h: Ah, l: Al } = u64.add(this.Ah | 0, this.Al | 0, Ah | 0, Al | 0));\n        ({ h: Bh, l: Bl } = u64.add(this.Bh | 0, this.Bl | 0, Bh | 0, Bl | 0));\n        ({ h: Ch, l: Cl } = u64.add(this.Ch | 0, this.Cl | 0, Ch | 0, Cl | 0));\n        ({ h: Dh, l: Dl } = u64.add(this.Dh | 0, this.Dl | 0, Dh | 0, Dl | 0));\n        ({ h: Eh, l: El } = u64.add(this.Eh | 0, this.El | 0, Eh | 0, El | 0));\n        ({ h: Fh, l: Fl } = u64.add(this.Fh | 0, this.Fl | 0, Fh | 0, Fl | 0));\n        ({ h: Gh, l: Gl } = u64.add(this.Gh | 0, this.Gl | 0, Gh | 0, Gl | 0));\n        ({ h: Hh, l: Hl } = u64.add(this.Hh | 0, this.Hl | 0, Hh | 0, Hl | 0));\n        this.set(Ah, Al, Bh, Bl, Ch, Cl, Dh, Dl, Eh, El, Fh, Fl, Gh, Gl, Hh, Hl);\n    }\n    roundClean() {\n        SHA512_W_H.fill(0);\n        SHA512_W_L.fill(0);\n    }\n    destroy() {\n        this.buffer.fill(0);\n        this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n    }\n}\nclass SHA512_224 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x8c3d37c8 | 0;\n        this.Al = 0x19544da2 | 0;\n        this.Bh = 0x73e19966 | 0;\n        this.Bl = 0x89dcd4d6 | 0;\n        this.Ch = 0x1dfab7ae | 0;\n        this.Cl = 0x32ff9c82 | 0;\n        this.Dh = 0x679dd514 | 0;\n        this.Dl = 0x582f9fcf | 0;\n        this.Eh = 0x0f6d2b69 | 0;\n        this.El = 0x7bd44da8 | 0;\n        this.Fh = 0x77e36f73 | 0;\n        this.Fl = 0x04c48942 | 0;\n        this.Gh = 0x3f9d85a8 | 0;\n        this.Gl = 0x6a1d36c8 | 0;\n        this.Hh = 0x1112e6ad | 0;\n        this.Hl = 0x91d692a1 | 0;\n        this.outputLen = 28;\n    }\n}\nclass SHA512_256 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0x22312194 | 0;\n        this.Al = 0xfc2bf72c | 0;\n        this.Bh = 0x9f555fa3 | 0;\n        this.Bl = 0xc84c64c2 | 0;\n        this.Ch = 0x2393b86b | 0;\n        this.Cl = 0x6f53b151 | 0;\n        this.Dh = 0x96387719 | 0;\n        this.Dl = 0x5940eabd | 0;\n        this.Eh = 0x96283ee2 | 0;\n        this.El = 0xa88effe3 | 0;\n        this.Fh = 0xbe5e1e25 | 0;\n        this.Fl = 0x53863992 | 0;\n        this.Gh = 0x2b0199fc | 0;\n        this.Gl = 0x2c85b8aa | 0;\n        this.Hh = 0x0eb72ddc | 0;\n        this.Hl = 0x81c52ca2 | 0;\n        this.outputLen = 32;\n    }\n}\nclass SHA384 extends SHA512 {\n    constructor() {\n        super();\n        // h -- high 32 bits, l -- low 32 bits\n        this.Ah = 0xcbbb9d5d | 0;\n        this.Al = 0xc1059ed8 | 0;\n        this.Bh = 0x629a292a | 0;\n        this.Bl = 0x367cd507 | 0;\n        this.Ch = 0x9159015a | 0;\n        this.Cl = 0x3070dd17 | 0;\n        this.Dh = 0x152fecd8 | 0;\n        this.Dl = 0xf70e5939 | 0;\n        this.Eh = 0x67332667 | 0;\n        this.El = 0xffc00b31 | 0;\n        this.Fh = 0x8eb44a87 | 0;\n        this.Fl = 0x68581511 | 0;\n        this.Gh = 0xdb0c2e0d | 0;\n        this.Gl = 0x64f98fa7 | 0;\n        this.Hh = 0x47b5481d | 0;\n        this.Hl = 0xbefa4fa4 | 0;\n        this.outputLen = 48;\n    }\n}\nexport const sha512 = /* @__PURE__ */ wrapConstructor(() => new SHA512());\nexport const sha512_224 = /* @__PURE__ */ wrapConstructor(() => new SHA512_224());\nexport const sha512_256 = /* @__PURE__ */ wrapConstructor(() => new SHA512_256());\nexport const sha384 = /* @__PURE__ */ wrapConstructor(() => new SHA384());\n//# sourceMappingURL=sha512.js.map","import { fromHex } from \"@mysten/bcs\";\nimport { hmac } from \"@noble/hashes/hmac\";\nimport { sha512 } from \"@noble/hashes/sha512\";\nimport nacl from \"tweetnacl\";\nconst ED25519_CURVE = \"ed25519 seed\";\nconst HARDENED_OFFSET = 2147483648;\nconst pathRegex = new RegExp(\"^m(\\\\/[0-9]+')+$\");\nconst replaceDerive = (val) => val.replace(\"'\", \"\");\nconst getMasterKeyFromSeed = (seed) => {\n  const h = hmac.create(sha512, ED25519_CURVE);\n  const I = h.update(fromHex(seed)).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nconst CKDPriv = ({ key, chainCode }, index) => {\n  const indexBuffer = new ArrayBuffer(4);\n  const cv = new DataView(indexBuffer);\n  cv.setUint32(0, index);\n  const data = new Uint8Array(1 + key.length + indexBuffer.byteLength);\n  data.set(new Uint8Array(1).fill(0));\n  data.set(key, 1);\n  data.set(new Uint8Array(indexBuffer, 0, indexBuffer.byteLength), key.length + 1);\n  const I = hmac.create(sha512, chainCode).update(data).digest();\n  const IL = I.slice(0, 32);\n  const IR = I.slice(32);\n  return {\n    key: IL,\n    chainCode: IR\n  };\n};\nconst getPublicKey = (privateKey, withZeroByte = true) => {\n  const keyPair = nacl.sign.keyPair.fromSeed(privateKey);\n  const signPk = keyPair.secretKey.subarray(32);\n  const newArr = new Uint8Array(signPk.length + 1);\n  newArr.set([0]);\n  newArr.set(signPk, 1);\n  return withZeroByte ? newArr : signPk;\n};\nconst isValidPath = (path) => {\n  if (!pathRegex.test(path)) {\n    return false;\n  }\n  return !path.split(\"/\").slice(1).map(replaceDerive).some(\n    isNaN\n    /* ts T_T*/\n  );\n};\nconst derivePath = (path, seed, offset = HARDENED_OFFSET) => {\n  if (!isValidPath(path)) {\n    throw new Error(\"Invalid derivation path\");\n  }\n  const { key, chainCode } = getMasterKeyFromSeed(seed);\n  const segments = path.split(\"/\").slice(1).map(replaceDerive).map((el) => parseInt(el, 10));\n  return segments.reduce((parentKeys, segment) => CKDPriv(parentKeys, segment + offset), {\n    key,\n    chainCode\n  });\n};\nexport {\n  derivePath,\n  getMasterKeyFromSeed,\n  getPublicKey,\n  isValidPath,\n  pathRegex,\n  replaceDerive\n};\n//# sourceMappingURL=ed25519-hd-key.js.map\n","import nacl from \"tweetnacl\";\nimport {\n  decodeSuiPrivateKey,\n  encodeSuiPrivateKey,\n  Keypair,\n  PRIVATE_KEY_SIZE\n} from \"../../cryptography/keypair.js\";\nimport { isValidHardenedPath, mnemonicToSeedHex } from \"../../cryptography/mnemonics.js\";\nimport { derivePath } from \"./ed25519-hd-key.js\";\nimport { Ed25519PublicKey } from \"./publickey.js\";\nconst DEFAULT_ED25519_DERIVATION_PATH = \"m/44'/784'/0'/0'/0'\";\nclass Ed25519Keypair extends Keypair {\n  /**\n   * Create a new Ed25519 keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair Ed25519 keypair\n   */\n  constructor(keypair) {\n    super();\n    if (keypair) {\n      this.keypair = keypair;\n    } else {\n      this.keypair = nacl.sign.keyPair();\n    }\n  }\n  /**\n   * Get the key scheme of the keypair ED25519\n   */\n  getKeyScheme() {\n    return \"ED25519\";\n  }\n  /**\n   * Generate a new random Ed25519 keypair\n   */\n  static generate() {\n    return new Ed25519Keypair(nacl.sign.keyPair());\n  }\n  /**\n   * Create a Ed25519 keypair from a raw secret key byte array, also known as seed.\n   * This is NOT the private scalar which is result of hashing and bit clamping of\n   * the raw secret key.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key as a byte array or Bech32 secret key string\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(secretKey, options) {\n    if (typeof secretKey === \"string\") {\n      const decoded = decodeSuiPrivateKey(secretKey);\n      if (decoded.schema !== \"ED25519\") {\n        throw new Error(`Expected a ED25519 keypair, got ${decoded.schema}`);\n      }\n      return this.fromSecretKey(decoded.secretKey, options);\n    }\n    const secretKeyLength = secretKey.length;\n    if (secretKeyLength !== PRIVATE_KEY_SIZE) {\n      throw new Error(\n        `Wrong secretKey size. Expected ${PRIVATE_KEY_SIZE} bytes, got ${secretKeyLength}.`\n      );\n    }\n    const keypair = nacl.sign.keyPair.fromSeed(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode(\"sui validation\");\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error(\"provided secretKey is invalid\");\n      }\n    }\n    return new Ed25519Keypair(keypair);\n  }\n  /**\n   * The public key for this Ed25519 keypair\n   */\n  getPublicKey() {\n    return new Ed25519PublicKey(this.keypair.publicKey);\n  }\n  /**\n   * The Bech32 secret key string for this Ed25519 keypair\n   */\n  getSecretKey() {\n    return encodeSuiPrivateKey(\n      this.keypair.secretKey.slice(0, PRIVATE_KEY_SIZE),\n      this.getKeyScheme()\n    );\n  }\n  /**\n   * Return the signature for the provided data using Ed25519.\n   */\n  async sign(data) {\n    return nacl.sign.detached(data, this.keypair.secretKey);\n  }\n  /**\n   * Derive Ed25519 keypair from mnemonics and path. The mnemonics must be normalized\n   * and validated against the english wordlist.\n   *\n   * If path is none, it will default to m/44'/784'/0'/0'/0', otherwise the path must\n   * be compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.\n   */\n  static deriveKeypair(mnemonics, path) {\n    if (path == null) {\n      path = DEFAULT_ED25519_DERIVATION_PATH;\n    }\n    if (!isValidHardenedPath(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n    const { key } = derivePath(path, mnemonicToSeedHex(mnemonics));\n    return Ed25519Keypair.fromSecretKey(key);\n  }\n  /**\n   * Derive Ed25519 keypair from mnemonicSeed and path.\n   *\n   * If path is none, it will default to m/44'/784'/0'/0'/0', otherwise the path must\n   * be compliant to SLIP-0010 in form m/44'/784'/{account_index}'/{change_index}'/{address_index}'.\n   */\n  static deriveKeypairFromSeed(seedHex, path) {\n    if (path == null) {\n      path = DEFAULT_ED25519_DERIVATION_PATH;\n    }\n    if (!isValidHardenedPath(path)) {\n      throw new Error(\"Invalid derivation path\");\n    }\n    const { key } = derivePath(path, seedHex);\n    return Ed25519Keypair.fromSecretKey(key);\n  }\n}\nexport {\n  DEFAULT_ED25519_DERIVATION_PATH,\n  Ed25519Keypair\n};\n//# sourceMappingURL=keypair.js.map\n","import { fromBase64 } from \"@mysten/bcs\";\nimport nacl from \"tweetnacl\";\nimport { bytesEqual, PublicKey } from \"../../cryptography/publickey.js\";\nimport { SIGNATURE_SCHEME_TO_FLAG } from \"../../cryptography/signature-scheme.js\";\nimport { parseSerializedSignature } from \"../../cryptography/signature.js\";\nconst PUBLIC_KEY_SIZE = 32;\nclass Ed25519PublicKey extends PublicKey {\n  /**\n   * Create a new Ed25519PublicKey object\n   * @param value ed25519 public key as buffer or base-64 encoded string\n   */\n  constructor(value) {\n    super();\n    if (typeof value === \"string\") {\n      this.data = fromBase64(value);\n    } else if (value instanceof Uint8Array) {\n      this.data = value;\n    } else {\n      this.data = Uint8Array.from(value);\n    }\n    if (this.data.length !== PUBLIC_KEY_SIZE) {\n      throw new Error(\n        `Invalid public key input. Expected ${PUBLIC_KEY_SIZE} bytes, got ${this.data.length}`\n      );\n    }\n  }\n  /**\n   * Checks if two Ed25519 public keys are equal\n   */\n  equals(publicKey) {\n    return super.equals(publicKey);\n  }\n  /**\n   * Return the byte array representation of the Ed25519 public key\n   */\n  toRawBytes() {\n    return this.data;\n  }\n  /**\n   * Return the Sui address associated with this Ed25519 public key\n   */\n  flag() {\n    return SIGNATURE_SCHEME_TO_FLAG[\"ED25519\"];\n  }\n  /**\n   * Verifies that the signature is valid for for the provided message\n   */\n  async verify(message, signature) {\n    let bytes;\n    if (typeof signature === \"string\") {\n      const parsed = parseSerializedSignature(signature);\n      if (parsed.signatureScheme !== \"ED25519\") {\n        throw new Error(\"Invalid signature scheme\");\n      }\n      if (!bytesEqual(this.toRawBytes(), parsed.publicKey)) {\n        throw new Error(\"Signature does not match public key\");\n      }\n      bytes = parsed.signature;\n    } else {\n      bytes = signature;\n    }\n    return nacl.sign.detached.verify(message, bytes, this.toRawBytes());\n  }\n}\nEd25519PublicKey.SIZE = PUBLIC_KEY_SIZE;\nexport {\n  Ed25519PublicKey\n};\n//# sourceMappingURL=publickey.js.map\n"],"names":["TX_EMPTY_SIZE","TX_INPUT_BASE","TX_INPUT_PUBKEYHASH","TX_OUTPUT_BASE","TX_OUTPUT_PUBKEYHASH","OP_RETURN_OVERHEAD","inputBytes","input","script","length","outputBytes","output","dustThreshold","feeRate","transactionBytes","inputs","outputs","reduce","a","x","uintOrNaN","v","NaN","isFinite","Math","floor","sumOrNaN","range","value","BLANK_OUTPUT","module","exports","finalize","bytesAccum","feeAfterExtraOutput","remainderAfterExtraOutput","concat","fee","sumForgiving","messageWithIntent","scope","message","IntentMessage","fixedArray","u8","serialize","intent","version","V0","appId","Sui","toBytes","bytesEqual","b","i","PublicKey","equals","publicKey","this","toRawBytes","toBase64","toString","Error","toSuiPublicKey","bytes","toSuiBytes","verifyWithIntent","signature","intentMessage","digest","dkLen","verify","verifyPersonalMessage","vector","verifyTransaction","transaction","rawBytes","suiBytes","Uint8Array","set","flag","toSuiAddress","slice","SIGNATURE_SCHEME_TO_FLAG","ED25519","Secp256k1","Secp256r1","MultiSig","ZkLogin","SIGNATURE_SCHEME_TO_SIZE","SIGNATURE_FLAG_TO_SCHEME","code","escapedRegExp","escapedReplacer","str","escapeSequences","charCodeAt","devAssert","condition","Boolean","MAX_ARRAY_LENGTH","MAX_RECURSIVE_DEPTH","inspect","formatValue","seenValues","JSON","stringify","name","formatObjectValue","previouslySeenValues","includes","isJSONable","toJSON","jsonValue","Array","isArray","formatArray","array","len","min","remaining","items","push","join","formatObject","object","entries","Object","getObjectTag","tag","prototype","call","replace","constructor","properties","map","key","String","Symbol","toStringTag","QueryDocumentKeys","Name","Document","OperationDefinition","VariableDefinition","Variable","SelectionSet","Field","Argument","FragmentSpread","InlineFragment","FragmentDefinition","IntValue","FloatValue","StringValue","BooleanValue","NullValue","EnumValue","ListValue","ObjectValue","ObjectField","Directive","NamedType","ListType","NonNullType","SchemaDefinition","OperationTypeDefinition","ScalarTypeDefinition","ObjectTypeDefinition","FieldDefinition","InputValueDefinition","InterfaceTypeDefinition","UnionTypeDefinition","EnumTypeDefinition","EnumValueDefinition","InputObjectTypeDefinition","DirectiveDefinition","SchemaExtension","ScalarTypeExtension","ObjectTypeExtension","InterfaceTypeExtension","UnionTypeExtension","EnumTypeExtension","InputObjectTypeExtension","kindValues","Set","keys","isNode","maybeNode","maybeKind","kind","has","OperationTypeNode","Kind","BREAK","freeze","getEnterLeaveForKind","visitor","kindVisitor","enter","leave","undefined","print","ast","visit","root","visitorKeys","enterLeaveMap","Map","values","stack","parent","inArray","index","edits","node","path","ancestors","isLeaving","isEdited","pop","editOffset","editKey","editValue","arrayKey","splice","defineProperties","getOwnPropertyDescriptors","prev","result","_enterLeaveMap$get","_enterLeaveMap$get2","visitFn","get","_node$kind","printDocASTReducer","definitions","varDefs","wrap","variableDefinitions","prefix","operation","directives","selectionSet","variable","type","defaultValue","selections","block","alias","arguments","args","argsLine","indent","typeCondition","isBlockString","printBlockString","options","escapedValue","lines","split","isSingleLine","forceLeadingNewLine","every","line","hasTrailingTripleQuotes","endsWith","hasTrailingQuote","hasTrailingSlash","forceTrailingNewline","printAsMultipleLines","minimize","skipLeadingNewLine","printString","fields","description","operationTypes","interfaces","hasMultilineItems","types","repeatable","locations","maybeArray","separator","_maybeArray$filter$jo","filter","start","maybeString","end","_maybeArray$some","some","_url","_queries","_headers","_fetch","__typeError","msg","TypeError","__accessCheck","obj","member","__privateGet","getter","__privateAdd","WeakSet","add","__privateSet","setter","SuiGraphQLRequestError","SuiGraphQLClient","url","fetch","fetchFn","headers","queries","query","res","method","body","variables","extensions","operationName","ok","statusText","status","json","execute","WeakMap","e","GraphQLError","r","n","t","l","super","nodes","source","positions","originalError","o","u","error","advance","lastIndex","test","blockString","ignored","RegExp","Const","Var","Int","Float","BlockString","Enum","d","exec","s","parse","arguments_","Spread","c","f","fragmentDefinition","operationDefinition","document","initGraphQLTada","graphql","loc","concatLocSources","clear","locationOffset","column","scalar","persisted","documentId","base64UrlCharTo6Bits","base64UrlChar","indexOf","binaryString","padStart","from","Number","decodeBase64URL","bits","base64UrlStringToBitVector","base64UrlString","bitVector","charAt","firstCharOffset","lastCharOffset","currentByteIndex","i2","bitChunk","byte","parseInt","TextDecoder","decode","extractClaimValue","claim","claimName","extendedClaim","indexMod4","verifyExtendedClaim","struct","proofPoints","string","issBase64Details","headerBase64","addressSeed","maxEpoch","u64","userSignature","toPaddedBigEndianBytes","num","width","hex","_data","_client","_ZkLoginPublicIdentifier","client","_message","_signature","parsedSignature","parseSerializedZkLoginSignature","graphqlVerifyZkLoginSignature","address","serializedSignature","intentScope","ZkLoginPublicIdentifier","VerifyZkLoginSignatureQuery","async","resp","author","data","verifyZkloginSignature","success","errors","signatureBytes","parseZkLoginSignature","iss","publicIdentifer","toZkLoginPublicIdentifier","addressSeedBytesBigEndian","issBytes","TextEncoder","encode","tmp","BigInt","signatureScheme","zkLogin","toSerializedSignature","pubKeyBytes","parseSerializedSignature","multisig","bcs","size","SUI_PRIVATE_KEY_PREFIX","Signer","signWithIntent","blake2b","sign","getKeyScheme","getPublicKey","signTransaction","signPersonalMessage","Keypair","number","isSafeInteger","lengths","isBytes","h","create","outputLen","blockLen","exists","instance","checkFinished","destroyed","finished","out","arr","DataView","buffer","byteOffset","byteLength","Uint32Array","utf8ToBytes","Hash","clone","_cloneInto","toStr","hashCons","hashC","update","HMAC","hash","_key","iHash","pad","oHash","fill","buf","digestInto","destroy","to","getPrototypeOf","hmac","pbkdf2Init","_password","_salt","_opts","opts","checkOpts","defaults","assign","asyncTick","password","salt","DK","PRF","PRFSalt","pbkdf2Output","prfW","HashMD","padOffset","isLE","pos","view","take","subarray","process","dataView","roundClean","setBigUint64","_32n","_u32_max","wh","wl","setUint32","oview","outLen","state","U32_MASK64","fromBig","le","lst","Ah","Al","toBig","shrSH","_l","shrSL","rotrSH","rotrSL","rotrBH","rotrBL","rotr32H","_h","rotr32L","rotlSH","rotlSL","rotlBH","rotlBL","Bh","Bl","add3L","Cl","add3H","low","Ch","add4L","Dl","add4H","Dh","add5H","Eh","add5L","El","SHA512_Kh","SHA512_Kl","SHA512_W_H","SHA512_W_L","SHA512","Fh","Fl","Gh","Gl","Hh","Hl","offset","getUint32","W15h","W15l","s0h","s0l","W2h","W2l","s1h","s1l","SUMl","SUMh","sigma1h","sigma1l","CHIh","CHIl","T1ll","T1h","T1l","sigma0h","sigma0l","MAJh","MAJl","All","nfkd","normalize","norm","words","passphrase","mnemonicToSeedSync","mnemonic","pbkdf2","ti","Ti","setInt32","ui","isValidHardenedPath","mnemonicToSeedHex","mnemonics","pathRegex","replaceDerive","val","derivePath","seed","isNaN","isValidPath","chainCode","I","getMasterKeyFromSeed","el","parentKeys","segment","indexBuffer","ArrayBuffer","CKDPriv","DEFAULT_ED25519_DERIVATION_PATH","Ed25519Keypair","keypair","keyPair","generate","fromSecretKey","secretKey","decoded","decodeSuiPrivateKey","bech32","extendedSecretKey","fromWords","schema","secretKeyLength","fromSeed","skipValidation","signData","detached","getSecretKey","encodeSuiPrivateKey","scheme","privKeyBytes","toWords","deriveKeypair","deriveKeypairFromSeed","seedHex","Ed25519PublicKey","parsed","SIZE"],"sourceRoot":""}