{"version":3,"file":"static/js/7057.46d6ba099c.chunk.js","mappings":"8wBAA+7E,qCAArmD,WAAW,KAAI,qBAACA,EAAoB,gBAACC,KAAkB,IAAAC,4BAA6B,OAACC,KAAS,IAAAC,oBAAsBC,IAAmB,IAAAC,6BAA2B,IAAAC,YAAU,WAAWC,YAAW,QAAkB,YAAY,IAAIC,QAAiBC,EAAA,EAAmBC,eAAeC,gBAAoBC,QAAkBH,EAAA,EAAmBI,kBAAkBC,gBAAgBC,EAAA,GAAUC,KAAK,CAACR,aAAWS,SAAQ,QAAqB,CAACC,YAAY,IAAqBC,QAAQC,IAAIR,EAAYS,SAAST,EAAYU,UAAUC,mBAAmB,OAAO,YAAW,QAAc,CAACC,GAAGhB,EAAWA,aAAWiB,SAASC,EAAA,GAAYC,aAAa,GAAGC,WAAWF,EAAA,GAAYE,YAAY,IAAK,IAAG,GAAG,IAAcC,IAAIC,KAAKC,UAAW,GAAE,IAAI,IAAIC,GAAQ,IAAAC,cAAY,WAAsC,WAAxBC,EAAAC,EAASC,cAAyB3B,EAAA,EAAmBC,eAAe2B,sBAAsBC,OAAM,WAAW,GAAI,GAAE,IAAQC,GAAoB,IAAAN,cAAY,SAASO,GAAkB,SAARA,GAAwB,WAARA,GAAuB/B,EAAA,EAAmBgC,gBAAgBC,SAAW,GAAE,IAAmmB,OCAt4E,SAASC,YAAYC,EAASC,GAAO,IAAIC,GAAc,IAAAC,QAAOH,IAAU,IAAAtC,YAAU,WAAWwC,EAAcE,QAAQJ,CAAS,GAAE,CAACA,KAAW,IAAAtC,YAAU,WAAW,GAAIuC,GAAe,IAARA,EAAX,CAA8B,IAAIrB,EAAGyB,aAAY,WAAW,OAAOH,EAAcE,SAAU,GAAEH,GAAO,OAAO,WAAW,OAAOK,cAAc1B,EAAI,CAAlH,CAAoH,GAAE,CAACqB,GAAQ,CDA4+CF,CAAYX,EAAQ,MAAQ,IAAA1B,WAAU0B,EAAQ,KAAI,IAAA1B,YAAU,WAA4c,GAAE,CAACN,EAAgBD,EAAqBwC,EAAoBnC,EAAkBF,IAAgB,IAAK,C","sources":["webpack://web/../../packages/kit/src/components/LastActivityTracker/index.ts","webpack://web/../../packages/kit/src/hooks/useInterval.ts"],"sourcesContent":["import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import{useCallback,useEffect}from'react';import AppState from\"react-native-web/dist/exports/AppState\";import backgroundApiProxy from'@onekeyhq/kit/src/background/instance/backgroundApiProxy';import{useInterval}from'@onekeyhq/kit/src/hooks/useInterval';import{usePasswordAtom,usePasswordPersistAtom,useSystemIdleLockSupport}from'@onekeyhq/kit-bg/src/states/jotai/atoms';import{analytics}from'@onekeyhq/shared/src/analytics';import{buildServiceEndpoint}from'@onekeyhq/shared/src/config/appConfig';import{defaultLogger}from'@onekeyhq/shared/src/logger/logger';import{setUser as setSentryUser}from'@onekeyhq/shared/src/modules3rdParty/sentry';import platformEnv from'@onekeyhq/shared/src/platformEnv';import{EServiceEndpointEnum}from'@onekeyhq/shared/types/endpoint';var LastActivityTracker=function(){var[{enableSystemIdleLock,appLockDuration}]=usePasswordPersistAtom();var[{unLock}]=usePasswordAtom();var[supportSystemIdle]=useSystemIdleLockSupport();useEffect(function(){setTimeout(_asyncToGenerator(function*(){var instanceId=yield backgroundApiProxy.serviceSetting.getInstanceId();var devSettings=yield backgroundApiProxy.serviceDevSetting.getDevSetting();analytics.init({instanceId,baseURL:buildServiceEndpoint({serviceName:EServiceEndpointEnum.Utility,env:devSettings.enabled&&devSettings.settings?.enableTestEndpoint?'test':'prod'})});setSentryUser({id:instanceId,instanceId,platform:platformEnv.appPlatform||'',appChannel:platformEnv.appChannel||''});}),0);defaultLogger.app.page.appStart();},[]);var refresh=useCallback(function(){if(AppState.currentState==='active'){backgroundApiProxy.serviceSetting.refreshLastActivity().catch(function(){});}},[]);var extHandleSystemIdle=useCallback(function(state){if(state==='idle'||state==='locked'){void backgroundApiProxy.servicePassword.lockApp();}},[]);useInterval(refresh,5*1000);useEffect(refresh,[]);useEffect(function(){if(supportSystemIdle&&enableSystemIdleLock&&unLock){if(false){chrome.idle.setDetectionInterval(appLockDuration*60);chrome.idle.onStateChanged.addListener(extHandleSystemIdle);}if(false){globalThis?.desktopApi?.setSystemIdleTime(appLockDuration*60,function(){void backgroundApiProxy.servicePassword.lockApp();});}}else{if(false){chrome.idle.onStateChanged.removeListener(extHandleSystemIdle);}if(false){globalThis?.desktopApi?.setSystemIdleTime(0);}}},[appLockDuration,enableSystemIdleLock,extHandleSystemIdle,supportSystemIdle,unLock]);return null;};export default LastActivityTracker;","import{useEffect,useRef}from'react';export function useInterval(callback,delay){var savedCallback=useRef(callback);useEffect(function(){savedCallback.current=callback;},[callback]);useEffect(function(){if(!delay&&delay!==0){return;}var id=setInterval(function(){return savedCallback.current();},delay);return function(){return clearInterval(id);};},[delay]);}"],"names":["enableSystemIdleLock","appLockDuration","usePasswordPersistAtom","unLock","usePasswordAtom","supportSystemIdle","useSystemIdleLockSupport","useEffect","setTimeout","instanceId","backgroundApiProxy","serviceSetting","getInstanceId","devSettings","serviceDevSetting","getDevSetting","analytics","init","baseURL","serviceName","Utility","env","enabled","settings","enableTestEndpoint","id","platform","platformEnv","appPlatform","appChannel","app","page","appStart","refresh","useCallback","AppState","A","currentState","refreshLastActivity","catch","extHandleSystemIdle","state","servicePassword","lockApp","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval"],"sourceRoot":""}